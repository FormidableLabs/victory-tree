{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///victory-tree.min.js","webpack:///webpack/bootstrap ed6a84e5021699d59402","webpack:///./src/index.js","webpack:///./src/components/victory-tree.jsx","webpack:///./~/d3/d3.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/radium/lib/index.js","webpack:///./~/radium/lib/enhancer.js","webpack:///./~/radium/lib/resolve-styles.js","webpack:///./~/radium/lib/mouse-up-listener.js","webpack:///./~/radium/lib/get-state.js","webpack:///./~/radium/lib/get-state-key.js","webpack:///./~/radium/lib/prefixer.js","webpack:///./~/radium/~/exenv/index.js","webpack:///./~/radium/~/array-find/find.js","webpack:///./~/radium/lib/config.js","webpack:///./~/radium/lib/components/style.js","webpack:///./~/radium/lib/create-markup-for-styles.js","webpack:///./~/radium/lib/keyframes.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","VictoryTree","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_d3","_d32","_react","_react2","_radium","_radium2","_React$Component","_VictoryTree","diagonal","svg","projection","d","y","x","nodes","_this","nodeComponents","map","node","index","createElement","links","_this2","linkComponents","link","d3Tree","layout","tree","size","height","width","data","transform","drawNodes","drawLinks","Component","propTypes","PropTypes","func","defaultProps","_link","styles","path","fill","stroke","strokeWidth","style","_node","text","fontFamily","fontSize","r","children","textAnchor","dy","dx","name","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","Enhancer","ComposedComponent","Style","getState","keyframes","Config","resolveStyles","enhanceWithRadium","RadiumEnhancer","_ComposedComponent","state","_radiumStyleState","renderedElement","_radiumMouseUpListener","_radiumMediaQueryListenersByQuery","query","staticKeys","displayName","_extends","assign","MouseUpListener","getStateKey","Prefixer","ExecutionEnvironment","React","mediaQueryListByQueryString","_isSpecialKey","_getStyleState","component","_setStyleState","newState","existing","_lastRadiumState","setState","_mergeStyles","_mouseUp",":active","_onMediaQueryChange","mediaQueryList","_resolveMediaQueryStyles","canMatchMedia","mediaQueryStyles","mql","matchMedia","addListener","removeListener","_cloneElement","newProps","newChildren","clone","cloneElement","existingKeyMap","_radiumDidResolveStyles","oldChildren","childrenType","Children","onlyChild","only","isValidElement","some","getPrefixedStyle","originalKey","ref","newStyle","styleKey","existingOnMouseEnter","onMouseEnter",":hover","existingOnMouseLeave","onMouseLeave","existingOnMouseDown","onMouseDown","_lastMouseDown","existingOnFocus","onFocus",":focus","existingOnBlur","onBlur","interactionStyles","canUseEventListeners","subscribe","__clearStateForTests","_callbacks","_mouseUpListenerIsActive","_handleMouseUp","ev","VALID_KEYS","elementKey","arrayFind","VENDOR_PREFIX_REGEX","infoByCssPrefix","-moz-","cssPrefix","jsPrefix","alternativeProperties","alignItems","css","js","flex","flexDirection","justifyContent","alternativeValues","flex-start","flex-end","display","column","space-between","-ms-","alignContent","alignSelf","space-around","inline-flex","-o-","-webkit-","isUnitlessNumber","boxFlex","boxFlexGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","fillOpacity","strokeDashoffset","strokeOpacity","domStyle","prefixedPropertyCache","prefixedValueCache","prefixInfo","canUseDOM","cssVendorPrefix","prefixMatch","windowStyles","_camelCaseRegex","_camelCaseReplacer","_camelCaseToDashCase","getPrefixedPropertyName","unprefixed","isDefaultForServer","possiblePropertyNames","workingProperty","possiblePropertyName","_addPixelSuffixToValueIfNeeded","originalProperty","_getPrefixedValue","cacheKey","possibleValues","workingValue","possibleValue","newKey","newValue","prefixedStyle","newProperty","console","warn","canUseWorkers","Worker","attachEvent","canUseViewport","screen","predicate","_matchMediaFunction","mediaQueryString","setMatchMedia","nextMatchMediaFunction","createMarkupForStyles","buildCssString","rules","prefixedRules","serializedRules","createClass","scopeSelector","getDefaultProps","_buildStyles","accumulator","_buildMediaQueryString","completeSelector","mediaQueryObj","contextMediaQueries","_getContextMediaQueries","completeQuery","mediaQueries","media","render","dangerouslySetInnerHTML","__html","spaces","isAnimationSupported","animationIndex","animationStyleSheet","keyframesPrefixed","head","sheet","cssRules","keyframeRules","rule","percentage","prefixedProps","serializedProps","insertRule"],"mappings":"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","file":"victory-tree.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryTree\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryTree\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryTree\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryTree\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  VictoryTree: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* eslint no-unused-vars:0 */\n\t\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _d3 = __webpack_require__(2);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _radium = __webpack_require__(4);\n\t\n\tvar _radium2 = _interopRequireDefault(_radium);\n\t\n\tvar VictoryTree = (function (_React$Component) {\n\t  _inherits(VictoryTree, _React$Component);\n\t\n\t  function VictoryTree(props) {\n\t    _classCallCheck(this, _VictoryTree);\n\t\n\t    _get(Object.getPrototypeOf(_VictoryTree.prototype), \"constructor\", this).call(this, props);\n\t    this.diagonal = _d32[\"default\"].svg.diagonal().projection(function (d) {\n\t      return [d.y, d.x];\n\t    });\n\t  }\n\t\n\t  _createClass(VictoryTree, [{\n\t    key: \"drawNodes\",\n\t    value: function drawNodes(nodes) {\n\t      var _this = this;\n\t\n\t      var nodeComponents = nodes.map(function (node, index) {\n\t        return _this.props.node(node, index);\n\t      });\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        null,\n\t        nodeComponents\n\t      );\n\t    }\n\t  }, {\n\t    key: \"drawLinks\",\n\t    value: function drawLinks(links) {\n\t      var _this2 = this;\n\t\n\t      var linkComponents = links.map(function (link, index) {\n\t        return _this2.props.link(link, _this2.diagonal, index);\n\t      });\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        null,\n\t        linkComponents\n\t      );\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // todo - check for changes in width height in componentWillRecieveProps\n\t      var d3Tree = _d32[\"default\"].layout.tree().size([this.props.height, this.props.width]);\n\t      var nodes = d3Tree.nodes(this.props.data);\n\t      var links = d3Tree.links(nodes);\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        { transform: this.props.transform },\n\t        this.drawNodes(nodes),\n\t        this.drawLinks(links)\n\t      );\n\t    }\n\t  }]);\n\t\n\t  var _VictoryTree = VictoryTree;\n\t  VictoryTree = (0, _radium2[\"default\"])(VictoryTree) || VictoryTree;\n\t  return VictoryTree;\n\t})(_react2[\"default\"].Component);\n\t\n\t;\n\t\n\tVictoryTree.propTypes = {\n\t  node: _react2[\"default\"].PropTypes.func,\n\t  link: _react2[\"default\"].PropTypes.func\n\t};\n\t\n\tVictoryTree.defaultProps = {\n\t  link: function link(_link, diagonal, index) {\n\t    var styles = {\n\t      path: {\n\t        \"fill\": \"none\",\n\t        \"stroke\": \"darkgrey\",\n\t        \"strokeWidth\": \".4px\"\n\t      }\n\t    };\n\t    return _react2[\"default\"].createElement(\"path\", {\n\t      key: index,\n\t      d: diagonal(_link),\n\t      style: [styles.path] });\n\t  },\n\t  node: function node(_node, index) {\n\t    var styles = {\n\t      text: {\n\t        \"fontFamily\": \"Helvetica\",\n\t        \"fontSize\": \"10px\"\n\t      }\n\t    };\n\t    return _react2[\"default\"].createElement(\n\t      \"g\",\n\t      { key: index, transform: \"translate(\" + _node.y + \",\" + _node.x + \")\" },\n\t      _react2[\"default\"].createElement(\"circle\", { r: _node.children ? 3 : 1 }),\n\t      _react2[\"default\"].createElement(\n\t        \"text\",\n\t        {\n\t          textAnchor: _node.children ? \"end\" : \"start\",\n\t          dy: 3,\n\t          dx: _node.children ? -8 : 8,\n\t          style: [styles.text]\n\t        },\n\t        _node.name\n\t      )\n\t    );\n\t  }\n\t};\n\t\n\texports[\"default\"] = VictoryTree;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Enhancer = __webpack_require__(5);\n\t\n\tmodule.exports = function (ComposedComponent) {\n\t  return Enhancer(ComposedComponent);\n\t};\n\tmodule.exports.Style = __webpack_require__(14);\n\tmodule.exports.getState = __webpack_require__(8);\n\tmodule.exports.keyframes = __webpack_require__(16);\n\tmodule.exports.Config = __webpack_require__(13);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }\n\t\n\tvar resolveStyles = __webpack_require__(6);\n\t\n\tvar enhanceWithRadium = function enhanceWithRadium(ComposedComponent) {\n\t  var RadiumEnhancer = (function (_ComposedComponent) {\n\t    function RadiumEnhancer() {\n\t      _classCallCheck(this, RadiumEnhancer);\n\t\n\t      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\t\n\t      this.state = this.state || {};\n\t      this.state._radiumStyleState = {};\n\t    }\n\t\n\t    _inherits(RadiumEnhancer, _ComposedComponent);\n\t\n\t    _createClass(RadiumEnhancer, [{\n\t      key: 'render',\n\t      value: function render() {\n\t        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n\t        return resolveStyles(this, renderedElement);\n\t      }\n\t    }, {\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n\t          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n\t        }\n\t\n\t        if (this._radiumMouseUpListener) {\n\t          this._radiumMouseUpListener.remove();\n\t        }\n\t\n\t        if (this._radiumMediaQueryListenersByQuery) {\n\t          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n\t            this._radiumMediaQueryListenersByQuery[query].remove();\n\t          }, this);\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return RadiumEnhancer;\n\t  })(ComposedComponent);\n\t\n\t  // Class inheritance uses Object.create and because of __proto__ issues\n\t  // with IE <10 any static properties of the superclass aren't inherited and\n\t  // so need to be manually populated\n\t  // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n\t  var staticKeys = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes'];\n\t\n\t  staticKeys.forEach(function (key) {\n\t    if (ComposedComponent.hasOwnProperty(key)) {\n\t      RadiumEnhancer[key] = ComposedComponent[key];\n\t    }\n\t  });\n\t\n\t  if (false) {\n\t    // This fixes React Hot Loader by exposing the original components top level\n\t    // prototype methods on the Radium enhanced prototype as discussed in #219.\n\t    Object.keys(ComposedComponent.prototype).forEach(function (key) {\n\t      if (!RadiumEnhancer.prototype.hasOwnProperty(key)) {\n\t        RadiumEnhancer.prototype[key] = ComposedComponent.prototype[key];\n\t      }\n\t    });\n\t  }\n\t\n\t  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\t\n\t  return RadiumEnhancer;\n\t};\n\t\n\tmodule.exports = enhanceWithRadium;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar MouseUpListener = __webpack_require__(7);\n\tvar getState = __webpack_require__(8);\n\tvar getStateKey = __webpack_require__(9);\n\tvar Prefixer = __webpack_require__(10);\n\tvar Config = __webpack_require__(13);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\tvar React = __webpack_require__(3);\n\t\n\t// babel-eslint 3.1.7 fails here for some reason, error:\n\t//   0:0  error  Cannot call method 'isSequenceExpression' of undefined\n\t//\n\t// declare class RadiumComponent extends ReactComponent {\n\t//   _lastMouseDown: number,\n\t//   _radiumMediaQueryListenersByQuery: Object<string, {remove: () => void}>,\n\t//   _radiumMouseUpListener: {remove: () => void},\n\t// }\n\t\n\tvar mediaQueryListByQueryString = {};\n\t\n\tvar _isSpecialKey = function _isSpecialKey(key) {\n\t  return key[0] === ':' || key[0] === '@';\n\t};\n\t\n\tvar _getStyleState = function _getStyleState(component, key, value) {\n\t  return getState(component.state, key, value);\n\t};\n\t\n\tvar _setStyleState = function _setStyleState(component, key, newState) {\n\t  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\t\n\t  var state = { _radiumStyleState: _extends({}, existing) };\n\t  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key], newState);\n\t\n\t  component._lastRadiumState = state._radiumStyleState;\n\t  component.setState(state);\n\t};\n\t\n\t// Merge style objects. Special casing for props starting with ';'; the values\n\t// should be objects, and are merged with others of the same name (instead of\n\t// overwriting).\n\tvar _mergeStyles = function _mergeStyles(styles) {\n\t  var result = {};\n\t\n\t  styles.forEach(function (style) {\n\t    if (!style || typeof style !== 'object' || Array.isArray(style)) {\n\t      return;\n\t    }\n\t\n\t    Object.keys(style).forEach(function (key) {\n\t      if (_isSpecialKey(key) && result[key]) {\n\t        result[key] = _mergeStyles([result[key], style[key]]);\n\t      } else {\n\t        result[key] = style[key];\n\t      }\n\t    });\n\t  });\n\t\n\t  return result;\n\t};\n\t\n\tvar _mouseUp = function _mouseUp(component) {\n\t  Object.keys(component.state._radiumStyleState).forEach(function (key) {\n\t    if (_getStyleState(component, key, ':active')) {\n\t      _setStyleState(component, key, { ':active': false });\n\t    }\n\t  });\n\t};\n\t\n\tvar _onMediaQueryChange = function _onMediaQueryChange(component, query, mediaQueryList) {\n\t  var state = {};\n\t  state[query] = mediaQueryList.matches;\n\t  _setStyleState(component, '_all', state);\n\t};\n\t\n\tvar _resolveMediaQueryStyles = function _resolveMediaQueryStyles(component, style) {\n\t  if (!Config.canMatchMedia()) {\n\t    return style;\n\t  }\n\t\n\t  Object.keys(style).filter(function (name) {\n\t    return name[0] === '@';\n\t  }).map(function (query) {\n\t    var mediaQueryStyles = style[query];\n\t    query = query.replace('@media ', '');\n\t\n\t    // Create a global MediaQueryList if one doesn't already exist\n\t    var mql = mediaQueryListByQueryString[query];\n\t    if (!mql) {\n\t      mediaQueryListByQueryString[query] = mql = Config.matchMedia(query);\n\t    }\n\t\n\t    // Keep track of which keys already have listeners\n\t    if (!component._radiumMediaQueryListenersByQuery) {\n\t      component._radiumMediaQueryListenersByQuery = {};\n\t    }\n\t\n\t    if (!component._radiumMediaQueryListenersByQuery[query]) {\n\t      var listener = _onMediaQueryChange.bind(null, component, query);\n\t      mql.addListener(listener);\n\t      component._radiumMediaQueryListenersByQuery[query] = {\n\t        remove: function remove() {\n\t          mql.removeListener(listener);\n\t        }\n\t      };\n\t    }\n\t\n\t    // Apply media query states\n\t    if (mql.matches) {\n\t      style = _mergeStyles([style, mediaQueryStyles]);\n\t    }\n\t  });\n\t\n\t  return style;\n\t};\n\t\n\t// Wrapper around React.cloneElement. To avoid processing the same element\n\t// twice, whenever we clone an element add a special non-enumerable prop to\n\t// make sure we don't process this element again.\n\tvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n\t  var clone = React.cloneElement(renderedElement, newProps, newChildren);\n\t\n\t  Object.defineProperty(clone.props, '_radiumDidResolveStyles', { value: true, enumerable: false });\n\t\n\t  return clone;\n\t};\n\t\n\t//\n\t// The nucleus of Radium. resolveStyles is called on the rendered elements\n\t// before they are returned in render. It iterates over the elements and\n\t// children, rewriting props to add event handlers required to capture user\n\t// interactions (e.g. mouse over). It also replaces the style prop because it\n\t// adds in the various interaction styles (e.g. :hover).\n\t//\n\tvar resolveStyles = function resolveStyles(component, // ReactComponent, flow+eslint complaining\n\trenderedElement, // ReactElement\n\texistingKeyMap) {\n\t  // ReactElement\n\t  existingKeyMap = existingKeyMap || {};\n\t\n\t  if (!renderedElement || renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n\t    return renderedElement;\n\t  }\n\t\n\t  // Recurse over children first in case we bail early. Note that children only\n\t  // include those rendered in `this` component. Child nodes in other components\n\t  // will not be here, so each component needs to use Radium.\n\t  var newChildren;\n\t  var oldChildren = renderedElement.props.children;\n\t  if (oldChildren) {\n\t    var childrenType = typeof oldChildren;\n\t    if (childrenType === 'string' || childrenType === 'number' || childrenType === 'function') {\n\t      // Don't do anything with a single primitive child or functions\n\t      newChildren = oldChildren;\n\t    } else if (React.Children.count(oldChildren) === 1 && oldChildren.type) {\n\t      // If a React Element is an only child, don't wrap it in an array for\n\t      // React.Children.map() for React.Children.only() compatibility.\n\t      var onlyChild = React.Children.only(oldChildren);\n\t      newChildren = resolveStyles(component, onlyChild, existingKeyMap);\n\t    } else {\n\t      newChildren = React.Children.map(oldChildren, function (child) {\n\t        if (React.isValidElement(child)) {\n\t          return resolveStyles(component, child, existingKeyMap);\n\t        }\n\t\n\t        return child;\n\t      });\n\t    }\n\t  }\n\t\n\t  // Bail early if element is not a simple ReactDOMElement.\n\t  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string') {\n\t    if (oldChildren === newChildren) {\n\t      return renderedElement;\n\t    }\n\t\n\t    return _cloneElement(renderedElement, renderedElement.props, newChildren);\n\t  }\n\t\n\t  var props = renderedElement.props;\n\t  var style = props.style;\n\t  var newProps = {};\n\t\n\t  // Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n\t  // Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n\t  if (Array.isArray(style)) {\n\t    style = _mergeStyles(style);\n\t  }\n\t\n\t  if (false) {\n\t    // Warn if you use longhand and shorthand properties in the same style\n\t    // object.\n\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\t\n\t    var shorthandPropertyExpansions = {\n\t      'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n\t      'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n\t      'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n\t      'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n\t      'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n\t      'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n\t      'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n\t      'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n\t      'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n\t    };\n\t\n\t    var checkProps = function checkProps(s) {\n\t      if (typeof s !== 'object' || !s) {\n\t        return;\n\t      }\n\t\n\t      var styleKeys = Object.keys(s);\n\t      styleKeys.forEach(function (styleKey) {\n\t        if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n\t          return styleKeys.indexOf(sp) !== -1;\n\t        })) {\n\t          /* eslint-disable no-console */\n\t          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + component.constructor.displayName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n\t          /* eslint-enable no-console */\n\t        }\n\t      });\n\t\n\t      styleKeys.forEach(function (k) {\n\t        return checkProps(s[k]);\n\t      });\n\t    };\n\t    checkProps(style);\n\t  }\n\t\n\t  // Bail early if no interactive styles.\n\t  if (!style || !Object.keys(style).some(_isSpecialKey)) {\n\t    if (style) {\n\t      // Still perform vendor prefixing, though.\n\t      newProps.style = Prefixer.getPrefixedStyle(style);\n\t      return _cloneElement(renderedElement, newProps, newChildren);\n\t    } else if (newChildren) {\n\t      return _cloneElement(renderedElement, {}, newChildren);\n\t    }\n\t\n\t    return renderedElement;\n\t  }\n\t\n\t  // We need a unique key to correlate state changes due to user interaction\n\t  // with the rendered element, so we know to apply the proper interactive\n\t  // styles.\n\t  var originalKey = renderedElement.ref || renderedElement.key;\n\t  var key = getStateKey(originalKey);\n\t\n\t  if (existingKeyMap[key]) {\n\t    throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n\t  }\n\t\n\t  existingKeyMap[key] = true;\n\t\n\t  // Media queries can contain pseudo styles, like :hover\n\t  style = _resolveMediaQueryStyles(component, style);\n\t\n\t  var newStyle = {};\n\t  Object.keys(style).forEach(function (styleKey) {\n\t    if (!_isSpecialKey(styleKey)) {\n\t      newStyle[styleKey] = style[styleKey];\n\t    }\n\t  });\n\t\n\t  // Only add handlers if necessary\n\t  if (style[':hover'] || style[':active']) {\n\t    // Always call the existing handler if one is already defined.\n\t    // This code, and the very similar ones below, could be abstracted a bit\n\t    // more, but it hurts readability IMO.\n\t    var existingOnMouseEnter = props.onMouseEnter;\n\t    newProps.onMouseEnter = function (e) {\n\t      existingOnMouseEnter && existingOnMouseEnter(e);\n\t      _setStyleState(component, key, { ':hover': true });\n\t    };\n\t\n\t    var existingOnMouseLeave = props.onMouseLeave;\n\t    newProps.onMouseLeave = function (e) {\n\t      existingOnMouseLeave && existingOnMouseLeave(e);\n\t      _setStyleState(component, key, { ':hover': false });\n\t    };\n\t  }\n\t\n\t  if (style[':active']) {\n\t    var existingOnMouseDown = props.onMouseDown;\n\t    newProps.onMouseDown = function (e) {\n\t      existingOnMouseDown && existingOnMouseDown(e);\n\t      component._lastMouseDown = Date.now();\n\t      _setStyleState(component, key, { ':active': true });\n\t    };\n\t  }\n\t\n\t  if (style[':focus']) {\n\t    var existingOnFocus = props.onFocus;\n\t    newProps.onFocus = function (e) {\n\t      existingOnFocus && existingOnFocus(e);\n\t      _setStyleState(component, key, { ':focus': true });\n\t    };\n\t\n\t    var existingOnBlur = props.onBlur;\n\t    newProps.onBlur = function (e) {\n\t      existingOnBlur && existingOnBlur(e);\n\t      _setStyleState(component, key, { ':focus': false });\n\t    };\n\t  }\n\t\n\t  // Merge the styles in the order they were defined\n\t  var interactionStyles = Object.keys(style).filter(function (name) {\n\t    return name === ':active' && _getStyleState(component, key, ':active') || name === ':hover' && _getStyleState(component, key, ':hover') || name === ':focus' && _getStyleState(component, key, ':focus');\n\t  }).map(function (name) {\n\t    return style[name];\n\t  });\n\t\n\t  if (interactionStyles.length) {\n\t    newStyle = _mergeStyles([newStyle].concat(interactionStyles));\n\t  }\n\t\n\t  if (style[':active'] && !component._radiumMouseUpListener && ExecutionEnvironment.canUseEventListeners) {\n\t    component._radiumMouseUpListener = MouseUpListener.subscribe(_mouseUp.bind(null, component));\n\t  }\n\t\n\t  newProps.style = Prefixer.getPrefixedStyle(newStyle);\n\t\n\t  return _cloneElement(renderedElement, newProps, newChildren);\n\t};\n\t\n\t// Exposing methods for tests is ugly, but the alternative, re-requiring the\n\t// module each time, is too slow\n\tresolveStyles.__clearStateForTests = function () {\n\t  mediaQueryListByQueryString = {};\n\t};\n\t\n\tmodule.exports = resolveStyles;\n\t\n\t// Bail if we've already processed this element. This ensures that only the\n\t// owner of an element processes that element, since the owner's render\n\t// function will be called first (which will always be the case, since you\n\t// can't know what else to render until you render the parent component).\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _callbacks = [];\n\tvar _mouseUpListenerIsActive = false;\n\t\n\tvar _handleMouseUp = function _handleMouseUp(ev) {\n\t  _callbacks.forEach(function (callback) {\n\t    callback(ev);\n\t  });\n\t};\n\t\n\tvar subscribe = function subscribe(callback) {\n\t  if (_callbacks.indexOf(callback) === -1) {\n\t    _callbacks.push(callback);\n\t  }\n\t\n\t  if (!_mouseUpListenerIsActive) {\n\t    window.addEventListener('mouseup', _handleMouseUp);\n\t    _mouseUpListenerIsActive = true;\n\t  }\n\t\n\t  return {\n\t    remove: function remove() {\n\t      var index = _callbacks.indexOf(callback);\n\t      _callbacks.splice(index, 1);\n\t\n\t      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n\t        window.removeEventListener('mouseup', _handleMouseUp);\n\t        _mouseUpListenerIsActive = false;\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\tmodule.exports = {\n\t  subscribe: subscribe\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = __webpack_require__(9);\n\t\n\tvar VALID_KEYS = [':active', ':focus', ':hover'];\n\t\n\tvar getState = function getState(state, elementKey, value) {\n\t  if (VALID_KEYS.indexOf(value) === -1) {\n\t    throw new Error('Radium.getState invalid value param: `' + value + '`');\n\t  }\n\t\n\t  var key = getStateKey(elementKey);\n\t\n\t  return !!(state && state._radiumStyleState && state._radiumStyleState[key] && state._radiumStyleState[key][value]) || false;\n\t};\n\t\n\tmodule.exports = getState;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = function getStateKey(elementKey) {\n\t  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n\t};\n\t\n\tmodule.exports = getStateKey;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Based on https://github.com/jsstyles/css-vendor, but without having to\n\t * convert between different cases all the time.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\tvar arrayFind = __webpack_require__(12);\n\t\n\tvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\t\n\tvar infoByCssPrefix = {\n\t  '-moz-': {\n\t    cssPrefix: '-moz-',\n\t    jsPrefix: 'Moz',\n\t    alternativeProperties: {\n\t      // OLD - Firefox 19-\n\t      alignItems: [{ css: '-moz-box-align', js: 'MozBoxAlign' }],\n\t      flex: [{ css: '-moz-box-flex', js: 'MozBoxFlex' }],\n\t      flexDirection: [{ css: '-moz-box-orient', js: 'MozBoxOrient' }],\n\t      justifyContent: [{ css: '-moz-box-pack', js: 'MozBoxPack' }],\n\t      order: [{ css: '-moz-box-ordinal-group', js: 'MozBoxOrdinalGroup' }]\n\t    },\n\t    alternativeValues: {\n\t      // OLD - Firefox 19-\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-moz-box']\n\t      },\n\t      flexDirection: {\n\t        column: ['vertical'],\n\t        row: ['horizontal']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  },\n\t  '-ms-': {\n\t    cssPrefix: '-ms-',\n\t    jsPrefix: 'ms',\n\t    alternativeProperties: {\n\t      // TWEENER - IE 10\n\t      alignContent: [{ css: '-ms-flex-line-pack', js: 'msFlexLinePack' }],\n\t      alignItems: [{ css: '-ms-flex-align', js: 'msFlexAlign' }],\n\t      alignSelf: [{ css: '-ms-flex-align-item', js: 'msFlexAlignItem' }],\n\t      justifyContent: [{ css: '-ms-flex-pack', js: 'msFlexPack' }],\n\t      order: [{ css: '-ms-flex-order', js: 'msFlexOrder' }]\n\t    },\n\t    alternativeValues: {\n\t      // TWEENER - IE 10\n\t      alignContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      },\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      alignSelf: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-ms-flexbox'],\n\t        'inline-flex': ['-ms-inline-flexbox']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      }\n\t    }\n\t  },\n\t  '-o-': {\n\t    cssPrefix: '-o-',\n\t    jsPrefix: 'O'\n\t  },\n\t  '-webkit-': {\n\t    cssPrefix: '-webkit-',\n\t    jsPrefix: 'Webkit',\n\t    alternativeProperties: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: [{ css: '-webkit-box-align', js: 'WebkitBoxAlign' }],\n\t      flex: [{ css: '-webkit-box-flex', js: 'MozBoxFlex' }],\n\t      flexDirection: [{ css: '-webkit-box-orient', js: 'WebkitBoxOrient' }],\n\t      justifyContent: [{ css: '-webkit-box-pack', js: 'WebkitBoxPack' }],\n\t      order: [{ css: '-webkit-box-ordinal-group', js: 'WebkitBoxOrdinalGroup' }]\n\t    },\n\t    alternativeValues: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-webkit-box']\n\t      },\n\t      flexDirection: {\n\t        row: ['horizontal'],\n\t        column: ['vertical']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t * Copied from React core June 22, 2015.\n\t * https://github.com/facebook/react/blob/\n\t * ba81b60ad8e93b747be42a03b797065932c49c96/\n\t * src/renderers/dom/shared/CSSProperty.js\n\t */\n\tvar isUnitlessNumber = {\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  strokeDashoffset: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\tvar domStyle = {};\n\tvar prefixedPropertyCache = {};\n\tvar prefixedValueCache = {};\n\tvar prefixInfo = {\n\t  cssPrefix: '',\n\t  jsPrefix: ''\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  domStyle = document.createElement('p').style;\n\t\n\t  // older Firefox versions may have no float property in style object\n\t  // so we need to add it manually\n\t  if (domStyle.float === undefined) {\n\t    domStyle.float = '';\n\t  }\n\t\n\t  // Based on http://davidwalsh.name/vendor-prefix\n\t  var cssVendorPrefix;\n\t  var prefixMatch;\n\t  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\t\n\t  // Array.prototype.slice.call(windowStyles) fails with\n\t  // \"Uncaught TypeError: undefined is not a function\"\n\t  // in older versions Android (KitKat) web views\n\t  for (var i = 0; i < windowStyles.length; i++) {\n\t    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\t\n\t    if (prefixMatch) {\n\t      break;\n\t    }\n\t  }\n\t\n\t  cssVendorPrefix = prefixMatch && prefixMatch[0];\n\t\n\t  prefixInfo = infoByCssPrefix[cssVendorPrefix] || prefixInfo;\n\t}\n\t\n\tvar _camelCaseRegex = /([a-z])?([A-Z])/g;\n\tvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n\t  return p1 + '-' + p2.toLowerCase();\n\t};\n\tvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n\t  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n\t};\n\t\n\tvar getPrefixedPropertyName = function getPrefixedPropertyName(property) {\n\t  if (prefixedPropertyCache.hasOwnProperty(property)) {\n\t    return prefixedPropertyCache[property];\n\t  }\n\t\n\t  var unprefixed = {\n\t    css: _camelCaseToDashCase(property),\n\t    js: property,\n\t    isDefaultForServer: true\n\t  };\n\t\n\t  // Try the prefixed version first. Chrome in particular has the `filter` and\n\t  // `webkitFilter` properties availalbe on the style object, but only the\n\t  // prefixed version actually works.\n\t  var possiblePropertyNames = [\n\t  // Prefixed\n\t  {\n\t    css: prefixInfo.cssPrefix + _camelCaseToDashCase(property),\n\t    js: prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1)\n\t  }, unprefixed];\n\t\n\t  // Alternative property names\n\t  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n\t    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n\t  }\n\t\n\t  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n\t    if (possiblePropertyName.js in domStyle) {\n\t      return possiblePropertyName;\n\t    }\n\t  }) || false;\n\t\n\t  return prefixedPropertyCache[property] = workingProperty;\n\t};\n\t\n\t// React is planning to deprecate adding px automatically\n\t// (https://github.com/facebook/react/issues/1873), and if they do, this\n\t// should change to a warning or be removed in favor of React's warning.\n\t// Same goes for below.\n\tvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n\t  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[originalProperty]) {\n\t    return value + 'px';\n\t  }\n\t  return value;\n\t};\n\t\n\tvar _getPrefixedValue = function _getPrefixedValue(property, value, originalProperty) {\n\t  if (!Array.isArray(value)) {\n\t    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n\t    if (!isNaN(value) && value !== null) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n\t    }\n\t\n\t    if (typeof value !== 'string') {\n\t      if (value !== null && value !== undefined) {\n\t        value = value.toString();\n\t      } else {\n\t        return value;\n\t      }\n\t    }\n\t\n\t    // don't test numbers with units (e.g. 10em)\n\t    if (!isNaN(parseInt(value, 10))) {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  var cacheKey = Array.isArray(value) ? value.join(' || ')\n\t  /* babel-eslint bug: https://github.com/babel/babel-eslint/issues/149 */\n\t  /* eslint-disable space-infix-ops */\n\t  :\n\t  /* eslint-enable space-infix-ops */\n\t  property + value;\n\t\n\t  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n\t    return prefixedValueCache[cacheKey];\n\t  }\n\t\n\t  var possibleValues;\n\t  if (Array.isArray(value)) {\n\t    // Add px for the same values React would, otherwise the testing below will\n\t    // fail and it will try to fallback.\n\t    possibleValues = value.map(function (v) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n\t    });\n\t\n\t    // Add prefixed versions\n\t    possibleValues = possibleValues.concat(value.filter(function (v) {\n\t      return !isNaN(v);\n\t    }) // Don't prefix numbers\n\t    .map(function (v) {\n\t      return prefixInfo.cssPrefix + v;\n\t    }));\n\t  } else {\n\t    possibleValues = [\n\t    // Unprefixed\n\t    value,\n\t    // Prefixed\n\t    prefixInfo.cssPrefix + value];\n\t  }\n\t\n\t  // Alternative values\n\t  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n\t    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n\t  }\n\t\n\t  // Test possible value in order\n\t  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n\t    domStyle[property] = '';\n\t    domStyle[property] = possibleValue;\n\t\n\t    // Note that we just make sure it is not an empty string. Browsers will\n\t    // sometimes rewrite values, but still accept them. They will set the value\n\t    // to an empty string if not supported.\n\t    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n\t    //      but \"foobar\" becomes \"\", since it is not supported.\n\t    return !!domStyle[property];\n\t  });\n\t\n\t  if (workingValue) {\n\t    prefixedValueCache[cacheKey] = workingValue;\n\t  } else {\n\t    // Unsupported, assume unprefixed works, but warn\n\t    prefixedValueCache[cacheKey] = value;\n\t\n\t    if (false) {\n\t      /* eslint-disable no-console */\n\t      if (console && console.warn) {\n\t        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"');\n\t      }\n\t      /* eslint-enable no-console */\n\t    }\n\t  }\n\t\n\t  return prefixedValueCache[cacheKey];\n\t};\n\t\n\t// Returns a new style object with vendor prefixes added to property names\n\t// and values.\n\tvar getPrefixedStyle = function getPrefixedStyle(style, mode /* 'css' or 'js' */) {\n\t  mode = mode || 'js';\n\t\n\t  if (!ExecutionEnvironment.canUseDOM) {\n\t    return Object.keys(style).reduce(function (newStyle, key) {\n\t      var value = style[key];\n\t      var newKey = mode === 'css' ? _camelCaseToDashCase(key) : key;\n\t      var newValue = Array.isArray(value) ? value[0] : value;\n\t      newStyle[newKey] = newValue;\n\t      return newStyle;\n\t    }, {});\n\t  }\n\t\n\t  var prefixedStyle = {};\n\t  Object.keys(style).forEach(function (property) {\n\t    var value = style[property];\n\t\n\t    var newProperty = getPrefixedPropertyName(property);\n\t    if (newProperty === false) {\n\t      // Ignore unsupported properties\n\t      /* eslint-disable no-console */\n\t      if (console && console.warn) {\n\t        console.warn('Unsupported CSS property \"' + property + '\"');\n\t      }\n\t      /* eslint-enable no-console */\n\t      return;\n\t    }\n\t\n\t    var newValue = _getPrefixedValue(newProperty.js, value, property);\n\t\n\t    prefixedStyle[newProperty[mode]] = newValue;\n\t  });\n\t  return prefixedStyle;\n\t};\n\t\n\tmodule.exports = {\n\t  getPrefixedPropertyName: getPrefixedPropertyName,\n\t  getPrefixedStyle: getPrefixedStyle,\n\t  cssPrefix: prefixInfo.cssPrefix,\n\t  jsPrefix: prefixInfo.jsPrefix\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2015 Jed Watson.\n\t  Based on code that is Copyright 2013-2015, Facebook, Inc.\n\t  All rights reserved.\n\t*/\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar canUseDOM = !!(\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow.document &&\n\t\t\twindow.document.createElement\n\t\t);\n\t\n\t\tvar ExecutionEnvironment = {\n\t\n\t\t\tcanUseDOM: canUseDOM,\n\t\n\t\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\t\n\t\t\tcanUseEventListeners:\n\t\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t\t\tcanUseViewport: canUseDOM && !!window.screen\n\t\n\t\t};\n\t\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn ExecutionEnvironment;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = ExecutionEnvironment;\n\t\t} else {\n\t\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t\t}\n\t\n\t}());\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction find(array, predicate, context) {\n\t  if (typeof Array.prototype.find === 'function') {\n\t    return array.find(predicate, context);\n\t  }\n\t\n\t  context = context || this;\n\t  var length = array.length;\n\t  var i;\n\t\n\t  if (typeof predicate !== 'function') {\n\t    throw new TypeError(predicate + ' is not a function');\n\t  }\n\t\n\t  for (i = 0; i < length; i++) {\n\t    if (predicate.call(context, array[i], i, array)) {\n\t      return array[i];\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = find;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\t\n\tvar _matchMediaFunction = ExecutionEnvironment.canUseDOM && window && window.matchMedia && function (mediaQueryString) {\n\t  return window.matchMedia(mediaQueryString);\n\t};\n\t\n\tmodule.exports = {\n\t  canMatchMedia: function canMatchMedia() {\n\t    return typeof _matchMediaFunction === 'function';\n\t  },\n\t\n\t  matchMedia: function matchMedia(query) {\n\t    return _matchMediaFunction(query);\n\t  },\n\t\n\t  setMatchMedia: function setMatchMedia(nextMatchMediaFunction) {\n\t    _matchMediaFunction = nextMatchMediaFunction;\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar createMarkupForStyles = __webpack_require__(15);\n\tvar Prefixer = __webpack_require__(10);\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar buildCssString = function buildCssString(selector, rules) {\n\t  if (!selector || !rules) {\n\t    return;\n\t  }\n\t\n\t  var prefixedRules = Prefixer.getPrefixedStyle(rules, 'css');\n\t  var serializedRules = createMarkupForStyles(prefixedRules);\n\t\n\t  return selector + '{' + serializedRules + '}';\n\t};\n\t\n\tvar Style = React.createClass({\n\t  displayName: 'Style',\n\t\n\t  propTypes: {\n\t    rules: React.PropTypes.object,\n\t    scopeSelector: React.PropTypes.string\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      scopeSelector: ''\n\t    };\n\t  },\n\t\n\t  _buildStyles: function _buildStyles(styles) {\n\t    var _this = this;\n\t\n\t    return Object.keys(styles).reduce(function (accumulator, selector) {\n\t      var rules = styles[selector];\n\t\n\t      if (selector === 'mediaQueries') {\n\t        accumulator += _this._buildMediaQueryString(rules);\n\t      } else {\n\t        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n\t        accumulator += buildCssString(completeSelector, rules);\n\t      }\n\t\n\t      return accumulator;\n\t    }, '');\n\t  },\n\t\n\t  _buildMediaQueryString: function _buildMediaQueryString(mediaQueryObj) {\n\t    var _this2 = this;\n\t\n\t    var contextMediaQueries = this._getContextMediaQueries();\n\t    var mediaQueryString = '';\n\t\n\t    Object.keys(mediaQueryObj).forEach(function (query) {\n\t      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n\t      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(mediaQueryObj[query]) + '}';\n\t    });\n\t\n\t    return mediaQueryString;\n\t  },\n\t\n\t  _getContextMediaQueries: function _getContextMediaQueries() {\n\t    var contextMediaQueries = {};\n\t    if (this.context && this.context.mediaQueries) {\n\t      Object.keys(this.context.mediaQueries).forEach((function (query) {\n\t        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n\t      }).bind(this));\n\t    }\n\t\n\t    return contextMediaQueries;\n\t  },\n\t\n\t  render: function render() {\n\t    if (!this.props.rules) {\n\t      return null;\n\t    }\n\t\n\t    var styles = this._buildStyles(this.props.rules);\n\t\n\t    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n\t  }\n\t});\n\t\n\tmodule.exports = Style;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar createMarkupForStyles = function createMarkupForStyles(style, spaces) {\n\t  spaces = spaces || '';\n\t  return Object.keys(style).map(function (property) {\n\t    return spaces + property + ': ' + style[property] + ';';\n\t  }).join('\\n');\n\t};\n\t\n\tmodule.exports = createMarkupForStyles;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar createMarkupForStyles = __webpack_require__(15);\n\tvar Prefixer = __webpack_require__(10);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\t\n\tvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\n\t\n\tvar animationIndex = 1;\n\tvar animationStyleSheet = null;\n\tvar keyframesPrefixed = null;\n\t\n\tif (isAnimationSupported) {\n\t  animationStyleSheet = document.createElement('style');\n\t  document.head.appendChild(animationStyleSheet);\n\t\n\t  // Test if prefix needed for keyframes (copied from PrefixFree)\n\t  keyframesPrefixed = 'keyframes';\n\t  animationStyleSheet.textContent = '@keyframes {}';\n\t  if (!animationStyleSheet.sheet.cssRules.length) {\n\t    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n\t  }\n\t}\n\t\n\t// Simple animation helper that injects CSS into a style object containing the\n\t// keyframes, and returns a string with the generated animation name.\n\tvar keyframes = function keyframes(keyframeRules) {\n\t  var name = 'Animation' + animationIndex;\n\t  animationIndex += 1;\n\t\n\t  if (!isAnimationSupported) {\n\t    return name;\n\t  }\n\t\n\t  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n\t    var props = keyframeRules[percentage];\n\t    var prefixedProps = Prefixer.getPrefixedStyle(props, 'css');\n\t    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n\t    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n\t  }).join('\\n') + '\\n}\\n';\n\t\n\t  // for flow\n\t  /* istanbul ignore next */\n\t  if (!animationStyleSheet) {\n\t    throw new Error('keyframes not initialized properly');\n\t  }\n\t\n\t  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n\t  return name;\n\t};\n\t\n\tmodule.exports = keyframes;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** victory-tree.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ed6a84e5021699d59402\n **/","module.exports = {\n  VictoryTree: require(\"./components/victory-tree\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/* eslint no-unused-vars:0 */\n\nimport d3 from \"d3\";\nimport React from \"react\";\nimport Radium from \"radium\";\n\n@Radium\nclass VictoryTree extends React.Component {\n    constructor(props) {\n      super(props);\n      this.diagonal = d3.svg.diagonal().projection(\n        function(d) { return [d.y, d.x]; }\n      );\n    }\n    drawNodes(nodes) {\n      var nodeComponents = nodes.map((node, index) => {\n        return (\n          this.props.node(node, index)\n        )\n      })\n      return (<g>{nodeComponents}</g>)\n    }\n    drawLinks(links) {\n      var linkComponents = links.map((link, index) => {\n        return (\n          this.props.link(link, this.diagonal, index)\n        )\n      })\n      return (<g>\n        {linkComponents}\n      </g>)\n    }\n    render() {\n      // todo - check for changes in width height in componentWillRecieveProps\n      var d3Tree = d3.layout.tree().size(\n        [\n          this.props.height,\n          this.props.width\n        ]\n      );\n      var nodes = d3Tree.nodes(this.props.data);\n      var links = d3Tree.links(nodes);\n      return (\n        <g transform={this.props.transform}>\n          {this.drawNodes(nodes)}\n          {this.drawLinks(links)}\n        </g>\n      )\n    }\n};\n\nVictoryTree.propTypes = {\n  node: React.PropTypes.func,\n  link: React.PropTypes.func,\n};\n\nVictoryTree.defaultProps = {\n  link: (link, diagonal, index) => {\n    const styles = {\n      path: {\n        \"fill\": \"none\",\n        \"stroke\": \"darkgrey\",\n        \"strokeWidth\": \".4px\"\n      },\n    };\n    return (\n      <path\n        key={index}\n        d={diagonal(link)}\n        style={[styles.path]}/>\n    )\n  },\n  node: (node, index) => {\n    const styles = {\n      text: {\n        \"fontFamily\": \"Helvetica\",\n        \"fontSize\": \"10px\"\n      }\n    };\n    return (\n      <g key={index} transform={\"translate(\" + node.y + \",\" + node.x + \")\"}>\n        <circle r={node.children ? 3 : 1}/>\n        <text\n          textAnchor={node.children ? \"end\" : \"start\"}\n          dy={3}\n          dx={node.children ? -8 : 8}\n          style={[styles.text]}\n        >{node.name}</text>\n      </g>\n    )\n  }\n};\n\nexport default VictoryTree;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/victory-tree.jsx\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar Enhancer = require('./enhancer');\n\nmodule.exports = function (ComposedComponent) {\n  return Enhancer(ComposedComponent);\n};\nmodule.exports.Style = require('./components/style');\nmodule.exports.getState = require('./get-state');\nmodule.exports.keyframes = require('./keyframes');\nmodule.exports.Config = require('./config');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }\n\nvar resolveStyles = require('./resolve-styles.js');\n\nvar enhanceWithRadium = function enhanceWithRadium(ComposedComponent) {\n  var RadiumEnhancer = (function (_ComposedComponent) {\n    function RadiumEnhancer() {\n      _classCallCheck(this, RadiumEnhancer);\n\n      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\n      this.state = this.state || {};\n      this.state._radiumStyleState = {};\n    }\n\n    _inherits(RadiumEnhancer, _ComposedComponent);\n\n    _createClass(RadiumEnhancer, [{\n      key: 'render',\n      value: function render() {\n        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n        return resolveStyles(this, renderedElement);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n        }\n\n        if (this._radiumMouseUpListener) {\n          this._radiumMouseUpListener.remove();\n        }\n\n        if (this._radiumMediaQueryListenersByQuery) {\n          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n            this._radiumMediaQueryListenersByQuery[query].remove();\n          }, this);\n        }\n      }\n    }]);\n\n    return RadiumEnhancer;\n  })(ComposedComponent);\n\n  // Class inheritance uses Object.create and because of __proto__ issues\n  // with IE <10 any static properties of the superclass aren't inherited and\n  // so need to be manually populated\n  // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n  var staticKeys = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes'];\n\n  staticKeys.forEach(function (key) {\n    if (ComposedComponent.hasOwnProperty(key)) {\n      RadiumEnhancer[key] = ComposedComponent[key];\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This fixes React Hot Loader by exposing the original components top level\n    // prototype methods on the Radium enhanced prototype as discussed in #219.\n    Object.keys(ComposedComponent.prototype).forEach(function (key) {\n      if (!RadiumEnhancer.prototype.hasOwnProperty(key)) {\n        RadiumEnhancer.prototype[key] = ComposedComponent.prototype[key];\n      }\n    });\n  }\n\n  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\n  return RadiumEnhancer;\n};\n\nmodule.exports = enhanceWithRadium;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/enhancer.js\n ** module id = 5\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar MouseUpListener = require('./mouse-up-listener');\nvar getState = require('./get-state');\nvar getStateKey = require('./get-state-key');\nvar Prefixer = require('./prefixer');\nvar Config = require('./config');\n\nvar ExecutionEnvironment = require('exenv');\nvar React = require('react');\n\n// babel-eslint 3.1.7 fails here for some reason, error:\n//   0:0  error  Cannot call method 'isSequenceExpression' of undefined\n//\n// declare class RadiumComponent extends ReactComponent {\n//   _lastMouseDown: number,\n//   _radiumMediaQueryListenersByQuery: Object<string, {remove: () => void}>,\n//   _radiumMouseUpListener: {remove: () => void},\n// }\n\nvar mediaQueryListByQueryString = {};\n\nvar _isSpecialKey = function _isSpecialKey(key) {\n  return key[0] === ':' || key[0] === '@';\n};\n\nvar _getStyleState = function _getStyleState(component, key, value) {\n  return getState(component.state, key, value);\n};\n\nvar _setStyleState = function _setStyleState(component, key, newState) {\n  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\n  var state = { _radiumStyleState: _extends({}, existing) };\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key], newState);\n\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\n// Merge style objects. Special casing for props starting with ';'; the values\n// should be objects, and are merged with others of the same name (instead of\n// overwriting).\nvar _mergeStyles = function _mergeStyles(styles) {\n  var result = {};\n\n  styles.forEach(function (style) {\n    if (!style || typeof style !== 'object' || Array.isArray(style)) {\n      return;\n    }\n\n    Object.keys(style).forEach(function (key) {\n      if (_isSpecialKey(key) && result[key]) {\n        result[key] = _mergeStyles([result[key], style[key]]);\n      } else {\n        result[key] = style[key];\n      }\n    });\n  });\n\n  return result;\n};\n\nvar _mouseUp = function _mouseUp(component) {\n  Object.keys(component.state._radiumStyleState).forEach(function (key) {\n    if (_getStyleState(component, key, ':active')) {\n      _setStyleState(component, key, { ':active': false });\n    }\n  });\n};\n\nvar _onMediaQueryChange = function _onMediaQueryChange(component, query, mediaQueryList) {\n  var state = {};\n  state[query] = mediaQueryList.matches;\n  _setStyleState(component, '_all', state);\n};\n\nvar _resolveMediaQueryStyles = function _resolveMediaQueryStyles(component, style) {\n  if (!Config.canMatchMedia()) {\n    return style;\n  }\n\n  Object.keys(style).filter(function (name) {\n    return name[0] === '@';\n  }).map(function (query) {\n    var mediaQueryStyles = style[query];\n    query = query.replace('@media ', '');\n\n    // Create a global MediaQueryList if one doesn't already exist\n    var mql = mediaQueryListByQueryString[query];\n    if (!mql) {\n      mediaQueryListByQueryString[query] = mql = Config.matchMedia(query);\n    }\n\n    // Keep track of which keys already have listeners\n    if (!component._radiumMediaQueryListenersByQuery) {\n      component._radiumMediaQueryListenersByQuery = {};\n    }\n\n    if (!component._radiumMediaQueryListenersByQuery[query]) {\n      var listener = _onMediaQueryChange.bind(null, component, query);\n      mql.addListener(listener);\n      component._radiumMediaQueryListenersByQuery[query] = {\n        remove: function remove() {\n          mql.removeListener(listener);\n        }\n      };\n    }\n\n    // Apply media query states\n    if (mql.matches) {\n      style = _mergeStyles([style, mediaQueryStyles]);\n    }\n  });\n\n  return style;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special non-enumerable prop to\n// make sure we don't process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  var clone = React.cloneElement(renderedElement, newProps, newChildren);\n\n  Object.defineProperty(clone.props, '_radiumDidResolveStyles', { value: true, enumerable: false });\n\n  return clone;\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\nvar resolveStyles = function resolveStyles(component, // ReactComponent, flow+eslint complaining\nrenderedElement, // ReactElement\nexistingKeyMap) {\n  // ReactElement\n  existingKeyMap = existingKeyMap || {};\n\n  if (!renderedElement || renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n    return renderedElement;\n  }\n\n  // Recurse over children first in case we bail early. Note that children only\n  // include those rendered in `this` component. Child nodes in other components\n  // will not be here, so each component needs to use Radium.\n  var newChildren;\n  var oldChildren = renderedElement.props.children;\n  if (oldChildren) {\n    var childrenType = typeof oldChildren;\n    if (childrenType === 'string' || childrenType === 'number' || childrenType === 'function') {\n      // Don't do anything with a single primitive child or functions\n      newChildren = oldChildren;\n    } else if (React.Children.count(oldChildren) === 1 && oldChildren.type) {\n      // If a React Element is an only child, don't wrap it in an array for\n      // React.Children.map() for React.Children.only() compatibility.\n      var onlyChild = React.Children.only(oldChildren);\n      newChildren = resolveStyles(component, onlyChild, existingKeyMap);\n    } else {\n      newChildren = React.Children.map(oldChildren, function (child) {\n        if (React.isValidElement(child)) {\n          return resolveStyles(component, child, existingKeyMap);\n        }\n\n        return child;\n      });\n    }\n  }\n\n  // Bail early if element is not a simple ReactDOMElement.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string') {\n    if (oldChildren === newChildren) {\n      return renderedElement;\n    }\n\n    return _cloneElement(renderedElement, renderedElement.props, newChildren);\n  }\n\n  var props = renderedElement.props;\n  var style = props.style;\n  var newProps = {};\n\n  // Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n  // Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n  if (Array.isArray(style)) {\n    style = _mergeStyles(style);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Warn if you use longhand and shorthand properties in the same style\n    // object.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\n    var shorthandPropertyExpansions = {\n      'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n      'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n      'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n      'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n      'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n      'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n      'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n      'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n      'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n    };\n\n    var checkProps = function checkProps(s) {\n      if (typeof s !== 'object' || !s) {\n        return;\n      }\n\n      var styleKeys = Object.keys(s);\n      styleKeys.forEach(function (styleKey) {\n        if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n          return styleKeys.indexOf(sp) !== -1;\n        })) {\n          /* eslint-disable no-console */\n          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + component.constructor.displayName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n          /* eslint-enable no-console */\n        }\n      });\n\n      styleKeys.forEach(function (k) {\n        return checkProps(s[k]);\n      });\n    };\n    checkProps(style);\n  }\n\n  // Bail early if no interactive styles.\n  if (!style || !Object.keys(style).some(_isSpecialKey)) {\n    if (style) {\n      // Still perform vendor prefixing, though.\n      newProps.style = Prefixer.getPrefixedStyle(style);\n      return _cloneElement(renderedElement, newProps, newChildren);\n    } else if (newChildren) {\n      return _cloneElement(renderedElement, {}, newChildren);\n    }\n\n    return renderedElement;\n  }\n\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = renderedElement.ref || renderedElement.key;\n  var key = getStateKey(originalKey);\n\n  if (existingKeyMap[key]) {\n    throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n  }\n\n  existingKeyMap[key] = true;\n\n  // Media queries can contain pseudo styles, like :hover\n  style = _resolveMediaQueryStyles(component, style);\n\n  var newStyle = {};\n  Object.keys(style).forEach(function (styleKey) {\n    if (!_isSpecialKey(styleKey)) {\n      newStyle[styleKey] = style[styleKey];\n    }\n  });\n\n  // Only add handlers if necessary\n  if (style[':hover'] || style[':active']) {\n    // Always call the existing handler if one is already defined.\n    // This code, and the very similar ones below, could be abstracted a bit\n    // more, but it hurts readability IMO.\n    var existingOnMouseEnter = props.onMouseEnter;\n    newProps.onMouseEnter = function (e) {\n      existingOnMouseEnter && existingOnMouseEnter(e);\n      _setStyleState(component, key, { ':hover': true });\n    };\n\n    var existingOnMouseLeave = props.onMouseLeave;\n    newProps.onMouseLeave = function (e) {\n      existingOnMouseLeave && existingOnMouseLeave(e);\n      _setStyleState(component, key, { ':hover': false });\n    };\n  }\n\n  if (style[':active']) {\n    var existingOnMouseDown = props.onMouseDown;\n    newProps.onMouseDown = function (e) {\n      existingOnMouseDown && existingOnMouseDown(e);\n      component._lastMouseDown = Date.now();\n      _setStyleState(component, key, { ':active': true });\n    };\n  }\n\n  if (style[':focus']) {\n    var existingOnFocus = props.onFocus;\n    newProps.onFocus = function (e) {\n      existingOnFocus && existingOnFocus(e);\n      _setStyleState(component, key, { ':focus': true });\n    };\n\n    var existingOnBlur = props.onBlur;\n    newProps.onBlur = function (e) {\n      existingOnBlur && existingOnBlur(e);\n      _setStyleState(component, key, { ':focus': false });\n    };\n  }\n\n  // Merge the styles in the order they were defined\n  var interactionStyles = Object.keys(style).filter(function (name) {\n    return name === ':active' && _getStyleState(component, key, ':active') || name === ':hover' && _getStyleState(component, key, ':hover') || name === ':focus' && _getStyleState(component, key, ':focus');\n  }).map(function (name) {\n    return style[name];\n  });\n\n  if (interactionStyles.length) {\n    newStyle = _mergeStyles([newStyle].concat(interactionStyles));\n  }\n\n  if (style[':active'] && !component._radiumMouseUpListener && ExecutionEnvironment.canUseEventListeners) {\n    component._radiumMouseUpListener = MouseUpListener.subscribe(_mouseUp.bind(null, component));\n  }\n\n  newProps.style = Prefixer.getPrefixedStyle(newStyle);\n\n  return _cloneElement(renderedElement, newProps, newChildren);\n};\n\n// Exposing methods for tests is ugly, but the alternative, re-requiring the\n// module each time, is too slow\nresolveStyles.__clearStateForTests = function () {\n  mediaQueryListByQueryString = {};\n};\n\nmodule.exports = resolveStyles;\n\n// Bail if we've already processed this element. This ensures that only the\n// owner of an element processes that element, since the owner's render\n// function will be called first (which will always be the case, since you\n// can't know what else to render until you render the parent component).\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/resolve-styles.js\n ** module id = 6\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _callbacks = [];\nvar _mouseUpListenerIsActive = false;\n\nvar _handleMouseUp = function _handleMouseUp(ev) {\n  _callbacks.forEach(function (callback) {\n    callback(ev);\n  });\n};\n\nvar subscribe = function subscribe(callback) {\n  if (_callbacks.indexOf(callback) === -1) {\n    _callbacks.push(callback);\n  }\n\n  if (!_mouseUpListenerIsActive) {\n    window.addEventListener('mouseup', _handleMouseUp);\n    _mouseUpListenerIsActive = true;\n  }\n\n  return {\n    remove: function remove() {\n      var index = _callbacks.indexOf(callback);\n      _callbacks.splice(index, 1);\n\n      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n        window.removeEventListener('mouseup', _handleMouseUp);\n        _mouseUpListenerIsActive = false;\n      }\n    }\n  };\n};\n\nmodule.exports = {\n  subscribe: subscribe\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/mouse-up-listener.js\n ** module id = 7\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = require('./get-state-key');\n\nvar VALID_KEYS = [':active', ':focus', ':hover'];\n\nvar getState = function getState(state, elementKey, value) {\n  if (VALID_KEYS.indexOf(value) === -1) {\n    throw new Error('Radium.getState invalid value param: `' + value + '`');\n  }\n\n  var key = getStateKey(elementKey);\n\n  return !!(state && state._radiumStyleState && state._radiumStyleState[key] && state._radiumStyleState[key][value]) || false;\n};\n\nmodule.exports = getState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state.js\n ** module id = 8\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = function getStateKey(elementKey) {\n  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n};\n\nmodule.exports = getStateKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state-key.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('exenv');\nvar arrayFind = require('array-find');\n\nvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\nvar infoByCssPrefix = {\n  '-moz-': {\n    cssPrefix: '-moz-',\n    jsPrefix: 'Moz',\n    alternativeProperties: {\n      // OLD - Firefox 19-\n      alignItems: [{ css: '-moz-box-align', js: 'MozBoxAlign' }],\n      flex: [{ css: '-moz-box-flex', js: 'MozBoxFlex' }],\n      flexDirection: [{ css: '-moz-box-orient', js: 'MozBoxOrient' }],\n      justifyContent: [{ css: '-moz-box-pack', js: 'MozBoxPack' }],\n      order: [{ css: '-moz-box-ordinal-group', js: 'MozBoxOrdinalGroup' }]\n    },\n    alternativeValues: {\n      // OLD - Firefox 19-\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-moz-box']\n      },\n      flexDirection: {\n        column: ['vertical'],\n        row: ['horizontal']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  },\n  '-ms-': {\n    cssPrefix: '-ms-',\n    jsPrefix: 'ms',\n    alternativeProperties: {\n      // TWEENER - IE 10\n      alignContent: [{ css: '-ms-flex-line-pack', js: 'msFlexLinePack' }],\n      alignItems: [{ css: '-ms-flex-align', js: 'msFlexAlign' }],\n      alignSelf: [{ css: '-ms-flex-align-item', js: 'msFlexAlignItem' }],\n      justifyContent: [{ css: '-ms-flex-pack', js: 'msFlexPack' }],\n      order: [{ css: '-ms-flex-order', js: 'msFlexOrder' }]\n    },\n    alternativeValues: {\n      // TWEENER - IE 10\n      alignContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      },\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      alignSelf: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-ms-flexbox'],\n        'inline-flex': ['-ms-inline-flexbox']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      }\n    }\n  },\n  '-o-': {\n    cssPrefix: '-o-',\n    jsPrefix: 'O'\n  },\n  '-webkit-': {\n    cssPrefix: '-webkit-',\n    jsPrefix: 'Webkit',\n    alternativeProperties: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: [{ css: '-webkit-box-align', js: 'WebkitBoxAlign' }],\n      flex: [{ css: '-webkit-box-flex', js: 'MozBoxFlex' }],\n      flexDirection: [{ css: '-webkit-box-orient', js: 'WebkitBoxOrient' }],\n      justifyContent: [{ css: '-webkit-box-pack', js: 'WebkitBoxPack' }],\n      order: [{ css: '-webkit-box-ordinal-group', js: 'WebkitBoxOrdinalGroup' }]\n    },\n    alternativeValues: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-webkit-box']\n      },\n      flexDirection: {\n        row: ['horizontal'],\n        column: ['vertical']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  }\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n * Copied from React core June 22, 2015.\n * https://github.com/facebook/react/blob/\n * ba81b60ad8e93b747be42a03b797065932c49c96/\n * src/renderers/dom/shared/CSSProperty.js\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nvar domStyle = {};\nvar prefixedPropertyCache = {};\nvar prefixedValueCache = {};\nvar prefixInfo = {\n  cssPrefix: '',\n  jsPrefix: ''\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  domStyle = document.createElement('p').style;\n\n  // older Firefox versions may have no float property in style object\n  // so we need to add it manually\n  if (domStyle.float === undefined) {\n    domStyle.float = '';\n  }\n\n  // Based on http://davidwalsh.name/vendor-prefix\n  var cssVendorPrefix;\n  var prefixMatch;\n  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\n  // Array.prototype.slice.call(windowStyles) fails with\n  // \"Uncaught TypeError: undefined is not a function\"\n  // in older versions Android (KitKat) web views\n  for (var i = 0; i < windowStyles.length; i++) {\n    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\n    if (prefixMatch) {\n      break;\n    }\n  }\n\n  cssVendorPrefix = prefixMatch && prefixMatch[0];\n\n  prefixInfo = infoByCssPrefix[cssVendorPrefix] || prefixInfo;\n}\n\nvar _camelCaseRegex = /([a-z])?([A-Z])/g;\nvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n  return p1 + '-' + p2.toLowerCase();\n};\nvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n};\n\nvar getPrefixedPropertyName = function getPrefixedPropertyName(property) {\n  if (prefixedPropertyCache.hasOwnProperty(property)) {\n    return prefixedPropertyCache[property];\n  }\n\n  var unprefixed = {\n    css: _camelCaseToDashCase(property),\n    js: property,\n    isDefaultForServer: true\n  };\n\n  // Try the prefixed version first. Chrome in particular has the `filter` and\n  // `webkitFilter` properties availalbe on the style object, but only the\n  // prefixed version actually works.\n  var possiblePropertyNames = [\n  // Prefixed\n  {\n    css: prefixInfo.cssPrefix + _camelCaseToDashCase(property),\n    js: prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1)\n  }, unprefixed];\n\n  // Alternative property names\n  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n  }\n\n  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n    if (possiblePropertyName.js in domStyle) {\n      return possiblePropertyName;\n    }\n  }) || false;\n\n  return prefixedPropertyCache[property] = workingProperty;\n};\n\n// React is planning to deprecate adding px automatically\n// (https://github.com/facebook/react/issues/1873), and if they do, this\n// should change to a warning or be removed in favor of React's warning.\n// Same goes for below.\nvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[originalProperty]) {\n    return value + 'px';\n  }\n  return value;\n};\n\nvar _getPrefixedValue = function _getPrefixedValue(property, value, originalProperty) {\n  if (!Array.isArray(value)) {\n    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n    if (!isNaN(value) && value !== null) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n    }\n\n    if (typeof value !== 'string') {\n      if (value !== null && value !== undefined) {\n        value = value.toString();\n      } else {\n        return value;\n      }\n    }\n\n    // don't test numbers with units (e.g. 10em)\n    if (!isNaN(parseInt(value, 10))) {\n      return value;\n    }\n  }\n\n  var cacheKey = Array.isArray(value) ? value.join(' || ')\n  /* babel-eslint bug: https://github.com/babel/babel-eslint/issues/149 */\n  /* eslint-disable space-infix-ops */\n  :\n  /* eslint-enable space-infix-ops */\n  property + value;\n\n  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n    return prefixedValueCache[cacheKey];\n  }\n\n  var possibleValues;\n  if (Array.isArray(value)) {\n    // Add px for the same values React would, otherwise the testing below will\n    // fail and it will try to fallback.\n    possibleValues = value.map(function (v) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n    });\n\n    // Add prefixed versions\n    possibleValues = possibleValues.concat(value.filter(function (v) {\n      return !isNaN(v);\n    }) // Don't prefix numbers\n    .map(function (v) {\n      return prefixInfo.cssPrefix + v;\n    }));\n  } else {\n    possibleValues = [\n    // Unprefixed\n    value,\n    // Prefixed\n    prefixInfo.cssPrefix + value];\n  }\n\n  // Alternative values\n  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n  }\n\n  // Test possible value in order\n  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n    domStyle[property] = '';\n    domStyle[property] = possibleValue;\n\n    // Note that we just make sure it is not an empty string. Browsers will\n    // sometimes rewrite values, but still accept them. They will set the value\n    // to an empty string if not supported.\n    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n    //      but \"foobar\" becomes \"\", since it is not supported.\n    return !!domStyle[property];\n  });\n\n  if (workingValue) {\n    prefixedValueCache[cacheKey] = workingValue;\n  } else {\n    // Unsupported, assume unprefixed works, but warn\n    prefixedValueCache[cacheKey] = value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      if (console && console.warn) {\n        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"');\n      }\n      /* eslint-enable no-console */\n    }\n  }\n\n  return prefixedValueCache[cacheKey];\n};\n\n// Returns a new style object with vendor prefixes added to property names\n// and values.\nvar getPrefixedStyle = function getPrefixedStyle(style, mode /* 'css' or 'js' */) {\n  mode = mode || 'js';\n\n  if (!ExecutionEnvironment.canUseDOM) {\n    return Object.keys(style).reduce(function (newStyle, key) {\n      var value = style[key];\n      var newKey = mode === 'css' ? _camelCaseToDashCase(key) : key;\n      var newValue = Array.isArray(value) ? value[0] : value;\n      newStyle[newKey] = newValue;\n      return newStyle;\n    }, {});\n  }\n\n  var prefixedStyle = {};\n  Object.keys(style).forEach(function (property) {\n    var value = style[property];\n\n    var newProperty = getPrefixedPropertyName(property);\n    if (newProperty === false) {\n      // Ignore unsupported properties\n      /* eslint-disable no-console */\n      if (console && console.warn) {\n        console.warn('Unsupported CSS property \"' + property + '\"');\n      }\n      /* eslint-enable no-console */\n      return;\n    }\n\n    var newValue = _getPrefixedValue(newProperty.js, value, property);\n\n    prefixedStyle[newProperty[mode]] = newValue;\n  });\n  return prefixedStyle;\n};\n\nmodule.exports = {\n  getPrefixedPropertyName: getPrefixedPropertyName,\n  getPrefixedStyle: getPrefixedStyle,\n  cssPrefix: prefixInfo.cssPrefix,\n  jsPrefix: prefixInfo.jsPrefix\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/prefixer.js\n ** module id = 10\n ** module chunks = 0\n **/","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/~/exenv/index.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nfunction find(array, predicate, context) {\n  if (typeof Array.prototype.find === 'function') {\n    return array.find(predicate, context);\n  }\n\n  context = context || this;\n  var length = array.length;\n  var i;\n\n  if (typeof predicate !== 'function') {\n    throw new TypeError(predicate + ' is not a function');\n  }\n\n  for (i = 0; i < length; i++) {\n    if (predicate.call(context, array[i], i, array)) {\n      return array[i];\n    }\n  }\n}\n\nmodule.exports = find;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/~/array-find/find.js\n ** module id = 12\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar ExecutionEnvironment = require('exenv');\n\nvar _matchMediaFunction = ExecutionEnvironment.canUseDOM && window && window.matchMedia && function (mediaQueryString) {\n  return window.matchMedia(mediaQueryString);\n};\n\nmodule.exports = {\n  canMatchMedia: function canMatchMedia() {\n    return typeof _matchMediaFunction === 'function';\n  },\n\n  matchMedia: function matchMedia(query) {\n    return _matchMediaFunction(query);\n  },\n\n  setMatchMedia: function setMatchMedia(nextMatchMediaFunction) {\n    _matchMediaFunction = nextMatchMediaFunction;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/config.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar createMarkupForStyles = require('../create-markup-for-styles');\nvar Prefixer = require('../prefixer');\n\nvar React = require('react');\n\nvar buildCssString = function buildCssString(selector, rules) {\n  if (!selector || !rules) {\n    return;\n  }\n\n  var prefixedRules = Prefixer.getPrefixedStyle(rules, 'css');\n  var serializedRules = createMarkupForStyles(prefixedRules);\n\n  return selector + '{' + serializedRules + '}';\n};\n\nvar Style = React.createClass({\n  displayName: 'Style',\n\n  propTypes: {\n    rules: React.PropTypes.object,\n    scopeSelector: React.PropTypes.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scopeSelector: ''\n    };\n  },\n\n  _buildStyles: function _buildStyles(styles) {\n    var _this = this;\n\n    return Object.keys(styles).reduce(function (accumulator, selector) {\n      var rules = styles[selector];\n\n      if (selector === 'mediaQueries') {\n        accumulator += _this._buildMediaQueryString(rules);\n      } else {\n        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n        accumulator += buildCssString(completeSelector, rules);\n      }\n\n      return accumulator;\n    }, '');\n  },\n\n  _buildMediaQueryString: function _buildMediaQueryString(mediaQueryObj) {\n    var _this2 = this;\n\n    var contextMediaQueries = this._getContextMediaQueries();\n    var mediaQueryString = '';\n\n    Object.keys(mediaQueryObj).forEach(function (query) {\n      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(mediaQueryObj[query]) + '}';\n    });\n\n    return mediaQueryString;\n  },\n\n  _getContextMediaQueries: function _getContextMediaQueries() {\n    var contextMediaQueries = {};\n    if (this.context && this.context.mediaQueries) {\n      Object.keys(this.context.mediaQueries).forEach((function (query) {\n        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n      }).bind(this));\n    }\n\n    return contextMediaQueries;\n  },\n\n  render: function render() {\n    if (!this.props.rules) {\n      return null;\n    }\n\n    var styles = this._buildStyles(this.props.rules);\n\n    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n  }\n});\n\nmodule.exports = Style;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/components/style.js\n ** module id = 14\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar createMarkupForStyles = function createMarkupForStyles(style, spaces) {\n  spaces = spaces || '';\n  return Object.keys(style).map(function (property) {\n    return spaces + property + ': ' + style[property] + ';';\n  }).join('\\n');\n};\n\nmodule.exports = createMarkupForStyles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/create-markup-for-styles.js\n ** module id = 15\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar createMarkupForStyles = require('./create-markup-for-styles');\nvar Prefixer = require('./prefixer');\n\nvar ExecutionEnvironment = require('exenv');\n\nvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\n\nvar animationIndex = 1;\nvar animationStyleSheet = null;\nvar keyframesPrefixed = null;\n\nif (isAnimationSupported) {\n  animationStyleSheet = document.createElement('style');\n  document.head.appendChild(animationStyleSheet);\n\n  // Test if prefix needed for keyframes (copied from PrefixFree)\n  keyframesPrefixed = 'keyframes';\n  animationStyleSheet.textContent = '@keyframes {}';\n  if (!animationStyleSheet.sheet.cssRules.length) {\n    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n  }\n}\n\n// Simple animation helper that injects CSS into a style object containing the\n// keyframes, and returns a string with the generated animation name.\nvar keyframes = function keyframes(keyframeRules) {\n  var name = 'Animation' + animationIndex;\n  animationIndex += 1;\n\n  if (!isAnimationSupported) {\n    return name;\n  }\n\n  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n    var props = keyframeRules[percentage];\n    var prefixedProps = Prefixer.getPrefixedStyle(props, 'css');\n    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n  }).join('\\n') + '\\n}\\n';\n\n  // for flow\n  /* istanbul ignore next */\n  if (!animationStyleSheet) {\n    throw new Error('keyframes not initialized properly');\n  }\n\n  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n  return name;\n};\n\nmodule.exports = keyframes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/keyframes.js\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}