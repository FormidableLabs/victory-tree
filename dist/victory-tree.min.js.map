{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///victory-tree.min.js","webpack:///webpack/bootstrap bebce97fc3e4a09803b9","webpack:///./src/index.js","webpack:///./src/components/victory-tree.jsx","webpack:///./~/d3/d3.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./~/radium/lib/index.js","webpack:///./~/radium/lib/enhancer.js","webpack:///./~/radium/lib/resolve-styles.js","webpack:///./~/radium/lib/mouse-up-listener.js","webpack:///./~/radium/lib/get-state.js","webpack:///./~/radium/lib/get-state-key.js","webpack:///./~/radium/lib/prefixer.js","webpack:///./~/radium/~/exenv/index.js","webpack:///./~/radium/~/array-find/find.js","webpack:///./~/radium/lib/config.js","webpack:///./~/radium/lib/components/style.js","webpack:///./~/radium/lib/create-markup-for-styles.js","webpack:///./~/radium/lib/keyframes.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","VictoryTree","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","undefined","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_d3","_d32","_react","_react2","_radium","_radium2","_React$Component","_VictoryTree","diagonal","svg","projection","d","y","x","nodes","_this","nodeComponents","map","node","index","createElement","links","_this2","linkComponents","link","d3Tree","layout","tree","size","height","width","data","transform","drawNodes","drawLinks","Component","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","apply","d3_vendorSymbol","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","Enhancer","ComposedComponent","Style","getState","keyframes","Config","resolveStyles","enhanceWithRadium","RadiumEnhancer","_ComposedComponent","state","_radiumStyleState","renderedElement","_radiumMouseUpListener","_radiumMediaQueryListenersByQuery","query","staticKeys","displayName","_extends","assign","MouseUpListener","getStateKey","Prefixer","ExecutionEnvironment","React","mediaQueryListByQueryString","_isSpecialKey","_getStyleState","component","_setStyleState","newState","existing","_lastRadiumState","setState","_mergeStyles","styles","_mouseUp",":active","_onMediaQueryChange","mediaQueryList","_resolveMediaQueryStyles","canMatchMedia","mediaQueryStyles","mql","matchMedia","addListener","removeListener","_cloneElement","newProps","newChildren","clone","cloneElement","existingKeyMap","_radiumDidResolveStyles","oldChildren","childrenType","Children","onlyChild","only","isValidElement","some","getPrefixedStyle","originalKey","ref","newStyle","styleKey","existingOnMouseEnter","onMouseEnter",":hover","existingOnMouseLeave","onMouseLeave","existingOnMouseDown","onMouseDown","_lastMouseDown","existingOnFocus","onFocus",":focus","existingOnBlur","onBlur","interactionStyles","canUseEventListeners","subscribe","__clearStateForTests","_callbacks","_mouseUpListenerIsActive","_handleMouseUp","ev","VALID_KEYS","elementKey","arrayFind","VENDOR_PREFIX_REGEX","infoByCssPrefix","-moz-","cssPrefix","jsPrefix","alternativeProperties","alignItems","css","js","flex","flexDirection","justifyContent","alternativeValues","flex-start","flex-end","display","column","space-between","-ms-","alignContent","alignSelf","space-around","inline-flex","-o-","-webkit-","isUnitlessNumber","boxFlex","boxFlexGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","fillOpacity","strokeDashoffset","strokeOpacity","strokeWidth","domStyle","prefixedPropertyCache","prefixedValueCache","prefixInfo","canUseDOM","cssVendorPrefix","prefixMatch","windowStyles","_camelCaseRegex","_camelCaseReplacer","_camelCaseToDashCase","getPrefixedPropertyName","unprefixed","isDefaultForServer","possiblePropertyNames","workingProperty","possiblePropertyName","_addPixelSuffixToValueIfNeeded","originalProperty","_getPrefixedValue","cacheKey","possibleValues","workingValue","possibleValue","newKey","newValue","prefixedStyle","newProperty","console","warn","canUseWorkers","Worker","attachEvent","canUseViewport","screen","predicate","_matchMediaFunction","mediaQueryString","setMatchMedia","nextMatchMediaFunction","createMarkupForStyles","buildCssString","rules","prefixedRules","serializedRules","createClass","propTypes","PropTypes","scopeSelector","getDefaultProps","_buildStyles","accumulator","_buildMediaQueryString","completeSelector","mediaQueryObj","contextMediaQueries","_getContextMediaQueries","completeQuery","mediaQueries","media","render","dangerouslySetInnerHTML","__html","spaces","isAnimationSupported","animationIndex","animationStyleSheet","keyframesPrefixed","head","sheet","cssRules","keyframeRules","rule","percentage","prefixedProps","serializedProps","insertRule"],"mappings":"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","file":"victory-tree.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryTree\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryTree\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VictoryTree\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"VictoryTree\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t  VictoryTree: __webpack_require__(1)\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* eslint no-unused-vars:0 */\n\t\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _d3 = __webpack_require__(2);\n\t\n\tvar _d32 = _interopRequireDefault(_d3);\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _radium = __webpack_require__(4);\n\t\n\tvar _radium2 = _interopRequireDefault(_radium);\n\t\n\tvar VictoryTree = (function (_React$Component) {\n\t  _inherits(VictoryTree, _React$Component);\n\t\n\t  function VictoryTree(props) {\n\t    _classCallCheck(this, _VictoryTree);\n\t\n\t    _get(Object.getPrototypeOf(_VictoryTree.prototype), \"constructor\", this).call(this, props);\n\t    this.diagonal = _d32[\"default\"].svg.diagonal().projection(function (d) {\n\t      return [d.y, d.x];\n\t    });\n\t  }\n\t\n\t  _createClass(VictoryTree, [{\n\t    key: \"drawNodes\",\n\t    value: function drawNodes(nodes) {\n\t      var _this = this;\n\t\n\t      var nodeComponents = nodes.map(function (node, index) {\n\t        return _this.props.node(node, index);\n\t      });\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        null,\n\t        nodeComponents\n\t      );\n\t    }\n\t  }, {\n\t    key: \"drawLinks\",\n\t    value: function drawLinks(links) {\n\t      var _this2 = this;\n\t\n\t      var linkComponents = links.map(function (link, index) {\n\t        return _this2.props.link(link, _this2.diagonal, index);\n\t      });\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        null,\n\t        linkComponents\n\t      );\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      // todo - check for changes in width height in componentWillRecieveProps\n\t      var d3Tree = _d32[\"default\"].layout.tree().size([this.props.height, this.props.width]);\n\t      var nodes = d3Tree.nodes(this.props.data);\n\t      var links = d3Tree.links(nodes);\n\t      return _react2[\"default\"].createElement(\n\t        \"g\",\n\t        { transform: this.props.transform },\n\t        this.drawNodes(nodes),\n\t        this.drawLinks(links)\n\t      );\n\t    }\n\t  }]);\n\t\n\t  var _VictoryTree = VictoryTree;\n\t  VictoryTree = (0, _radium2[\"default\"])(VictoryTree) || VictoryTree;\n\t  return VictoryTree;\n\t})(_react2[\"default\"].Component);\n\t\n\t;\n\t\n\texports[\"default\"] = VictoryTree;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Enhancer = __webpack_require__(5);\n\t\n\tmodule.exports = function (ComposedComponent) {\n\t  return Enhancer(ComposedComponent);\n\t};\n\tmodule.exports.Style = __webpack_require__(14);\n\tmodule.exports.getState = __webpack_require__(8);\n\tmodule.exports.keyframes = __webpack_require__(16);\n\tmodule.exports.Config = __webpack_require__(13);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }\n\t\n\tvar resolveStyles = __webpack_require__(6);\n\t\n\tvar enhanceWithRadium = function enhanceWithRadium(ComposedComponent) {\n\t  var RadiumEnhancer = (function (_ComposedComponent) {\n\t    function RadiumEnhancer() {\n\t      _classCallCheck(this, RadiumEnhancer);\n\t\n\t      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\t\n\t      this.state = this.state || {};\n\t      this.state._radiumStyleState = {};\n\t    }\n\t\n\t    _inherits(RadiumEnhancer, _ComposedComponent);\n\t\n\t    _createClass(RadiumEnhancer, [{\n\t      key: 'render',\n\t      value: function render() {\n\t        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n\t        return resolveStyles(this, renderedElement);\n\t      }\n\t    }, {\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n\t          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n\t        }\n\t\n\t        if (this._radiumMouseUpListener) {\n\t          this._radiumMouseUpListener.remove();\n\t        }\n\t\n\t        if (this._radiumMediaQueryListenersByQuery) {\n\t          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n\t            this._radiumMediaQueryListenersByQuery[query].remove();\n\t          }, this);\n\t        }\n\t      }\n\t    }]);\n\t\n\t    return RadiumEnhancer;\n\t  })(ComposedComponent);\n\t\n\t  // Class inheritance uses Object.create and because of __proto__ issues\n\t  // with IE <10 any static properties of the superclass aren't inherited and\n\t  // so need to be manually populated\n\t  // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n\t  var staticKeys = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes'];\n\t\n\t  staticKeys.forEach(function (key) {\n\t    if (ComposedComponent.hasOwnProperty(key)) {\n\t      RadiumEnhancer[key] = ComposedComponent[key];\n\t    }\n\t  });\n\t\n\t  if (false) {\n\t    // This fixes React Hot Loader by exposing the original components top level\n\t    // prototype methods on the Radium enhanced prototype as discussed in #219.\n\t    Object.keys(ComposedComponent.prototype).forEach(function (key) {\n\t      if (!RadiumEnhancer.prototype.hasOwnProperty(key)) {\n\t        RadiumEnhancer.prototype[key] = ComposedComponent.prototype[key];\n\t      }\n\t    });\n\t  }\n\t\n\t  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\t\n\t  return RadiumEnhancer;\n\t};\n\t\n\tmodule.exports = enhanceWithRadium;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar MouseUpListener = __webpack_require__(7);\n\tvar getState = __webpack_require__(8);\n\tvar getStateKey = __webpack_require__(9);\n\tvar Prefixer = __webpack_require__(10);\n\tvar Config = __webpack_require__(13);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\tvar React = __webpack_require__(3);\n\t\n\t// babel-eslint 3.1.7 fails here for some reason, error:\n\t//   0:0  error  Cannot call method 'isSequenceExpression' of undefined\n\t//\n\t// declare class RadiumComponent extends ReactComponent {\n\t//   _lastMouseDown: number,\n\t//   _radiumMediaQueryListenersByQuery: Object<string, {remove: () => void}>,\n\t//   _radiumMouseUpListener: {remove: () => void},\n\t// }\n\t\n\tvar mediaQueryListByQueryString = {};\n\t\n\tvar _isSpecialKey = function _isSpecialKey(key) {\n\t  return key[0] === ':' || key[0] === '@';\n\t};\n\t\n\tvar _getStyleState = function _getStyleState(component, key, value) {\n\t  return getState(component.state, key, value);\n\t};\n\t\n\tvar _setStyleState = function _setStyleState(component, key, newState) {\n\t  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\t\n\t  var state = { _radiumStyleState: _extends({}, existing) };\n\t  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key], newState);\n\t\n\t  component._lastRadiumState = state._radiumStyleState;\n\t  component.setState(state);\n\t};\n\t\n\t// Merge style objects. Special casing for props starting with ';'; the values\n\t// should be objects, and are merged with others of the same name (instead of\n\t// overwriting).\n\tvar _mergeStyles = function _mergeStyles(styles) {\n\t  var result = {};\n\t\n\t  styles.forEach(function (style) {\n\t    if (!style || typeof style !== 'object' || Array.isArray(style)) {\n\t      return;\n\t    }\n\t\n\t    Object.keys(style).forEach(function (key) {\n\t      if (_isSpecialKey(key) && result[key]) {\n\t        result[key] = _mergeStyles([result[key], style[key]]);\n\t      } else {\n\t        result[key] = style[key];\n\t      }\n\t    });\n\t  });\n\t\n\t  return result;\n\t};\n\t\n\tvar _mouseUp = function _mouseUp(component) {\n\t  Object.keys(component.state._radiumStyleState).forEach(function (key) {\n\t    if (_getStyleState(component, key, ':active')) {\n\t      _setStyleState(component, key, { ':active': false });\n\t    }\n\t  });\n\t};\n\t\n\tvar _onMediaQueryChange = function _onMediaQueryChange(component, query, mediaQueryList) {\n\t  var state = {};\n\t  state[query] = mediaQueryList.matches;\n\t  _setStyleState(component, '_all', state);\n\t};\n\t\n\tvar _resolveMediaQueryStyles = function _resolveMediaQueryStyles(component, style) {\n\t  if (!Config.canMatchMedia()) {\n\t    return style;\n\t  }\n\t\n\t  Object.keys(style).filter(function (name) {\n\t    return name[0] === '@';\n\t  }).map(function (query) {\n\t    var mediaQueryStyles = style[query];\n\t    query = query.replace('@media ', '');\n\t\n\t    // Create a global MediaQueryList if one doesn't already exist\n\t    var mql = mediaQueryListByQueryString[query];\n\t    if (!mql) {\n\t      mediaQueryListByQueryString[query] = mql = Config.matchMedia(query);\n\t    }\n\t\n\t    // Keep track of which keys already have listeners\n\t    if (!component._radiumMediaQueryListenersByQuery) {\n\t      component._radiumMediaQueryListenersByQuery = {};\n\t    }\n\t\n\t    if (!component._radiumMediaQueryListenersByQuery[query]) {\n\t      var listener = _onMediaQueryChange.bind(null, component, query);\n\t      mql.addListener(listener);\n\t      component._radiumMediaQueryListenersByQuery[query] = {\n\t        remove: function remove() {\n\t          mql.removeListener(listener);\n\t        }\n\t      };\n\t    }\n\t\n\t    // Apply media query states\n\t    if (mql.matches) {\n\t      style = _mergeStyles([style, mediaQueryStyles]);\n\t    }\n\t  });\n\t\n\t  return style;\n\t};\n\t\n\t// Wrapper around React.cloneElement. To avoid processing the same element\n\t// twice, whenever we clone an element add a special non-enumerable prop to\n\t// make sure we don't process this element again.\n\tvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n\t  var clone = React.cloneElement(renderedElement, newProps, newChildren);\n\t\n\t  Object.defineProperty(clone.props, '_radiumDidResolveStyles', { value: true, enumerable: false });\n\t\n\t  return clone;\n\t};\n\t\n\t//\n\t// The nucleus of Radium. resolveStyles is called on the rendered elements\n\t// before they are returned in render. It iterates over the elements and\n\t// children, rewriting props to add event handlers required to capture user\n\t// interactions (e.g. mouse over). It also replaces the style prop because it\n\t// adds in the various interaction styles (e.g. :hover).\n\t//\n\tvar resolveStyles = function resolveStyles(component, // ReactComponent, flow+eslint complaining\n\trenderedElement, // ReactElement\n\texistingKeyMap) {\n\t  // ReactElement\n\t  existingKeyMap = existingKeyMap || {};\n\t\n\t  if (!renderedElement || renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n\t    return renderedElement;\n\t  }\n\t\n\t  // Recurse over children first in case we bail early. Note that children only\n\t  // include those rendered in `this` component. Child nodes in other components\n\t  // will not be here, so each component needs to use Radium.\n\t  var newChildren;\n\t  var oldChildren = renderedElement.props.children;\n\t  if (oldChildren) {\n\t    var childrenType = typeof oldChildren;\n\t    if (childrenType === 'string' || childrenType === 'number' || childrenType === 'function') {\n\t      // Don't do anything with a single primitive child or functions\n\t      newChildren = oldChildren;\n\t    } else if (React.Children.count(oldChildren) === 1 && oldChildren.type) {\n\t      // If a React Element is an only child, don't wrap it in an array for\n\t      // React.Children.map() for React.Children.only() compatibility.\n\t      var onlyChild = React.Children.only(oldChildren);\n\t      newChildren = resolveStyles(component, onlyChild, existingKeyMap);\n\t    } else {\n\t      newChildren = React.Children.map(oldChildren, function (child) {\n\t        if (React.isValidElement(child)) {\n\t          return resolveStyles(component, child, existingKeyMap);\n\t        }\n\t\n\t        return child;\n\t      });\n\t    }\n\t  }\n\t\n\t  // Bail early if element is not a simple ReactDOMElement.\n\t  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string') {\n\t    if (oldChildren === newChildren) {\n\t      return renderedElement;\n\t    }\n\t\n\t    return _cloneElement(renderedElement, renderedElement.props, newChildren);\n\t  }\n\t\n\t  var props = renderedElement.props;\n\t  var style = props.style;\n\t  var newProps = {};\n\t\n\t  // Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n\t  // Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n\t  if (Array.isArray(style)) {\n\t    style = _mergeStyles(style);\n\t  }\n\t\n\t  if (false) {\n\t    // Warn if you use longhand and shorthand properties in the same style\n\t    // object.\n\t    // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\t\n\t    var shorthandPropertyExpansions = {\n\t      'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n\t      'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n\t      'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n\t      'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n\t      'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n\t      'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n\t      'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n\t      'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n\t      'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n\t    };\n\t\n\t    var checkProps = function checkProps(s) {\n\t      if (typeof s !== 'object' || !s) {\n\t        return;\n\t      }\n\t\n\t      var styleKeys = Object.keys(s);\n\t      styleKeys.forEach(function (styleKey) {\n\t        if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n\t          return styleKeys.indexOf(sp) !== -1;\n\t        })) {\n\t          /* eslint-disable no-console */\n\t          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + component.constructor.displayName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n\t          /* eslint-enable no-console */\n\t        }\n\t      });\n\t\n\t      styleKeys.forEach(function (k) {\n\t        return checkProps(s[k]);\n\t      });\n\t    };\n\t    checkProps(style);\n\t  }\n\t\n\t  // Bail early if no interactive styles.\n\t  if (!style || !Object.keys(style).some(_isSpecialKey)) {\n\t    if (style) {\n\t      // Still perform vendor prefixing, though.\n\t      newProps.style = Prefixer.getPrefixedStyle(style);\n\t      return _cloneElement(renderedElement, newProps, newChildren);\n\t    } else if (newChildren) {\n\t      return _cloneElement(renderedElement, {}, newChildren);\n\t    }\n\t\n\t    return renderedElement;\n\t  }\n\t\n\t  // We need a unique key to correlate state changes due to user interaction\n\t  // with the rendered element, so we know to apply the proper interactive\n\t  // styles.\n\t  var originalKey = renderedElement.ref || renderedElement.key;\n\t  var key = getStateKey(originalKey);\n\t\n\t  if (existingKeyMap[key]) {\n\t    throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n\t  }\n\t\n\t  existingKeyMap[key] = true;\n\t\n\t  // Media queries can contain pseudo styles, like :hover\n\t  style = _resolveMediaQueryStyles(component, style);\n\t\n\t  var newStyle = {};\n\t  Object.keys(style).forEach(function (styleKey) {\n\t    if (!_isSpecialKey(styleKey)) {\n\t      newStyle[styleKey] = style[styleKey];\n\t    }\n\t  });\n\t\n\t  // Only add handlers if necessary\n\t  if (style[':hover'] || style[':active']) {\n\t    // Always call the existing handler if one is already defined.\n\t    // This code, and the very similar ones below, could be abstracted a bit\n\t    // more, but it hurts readability IMO.\n\t    var existingOnMouseEnter = props.onMouseEnter;\n\t    newProps.onMouseEnter = function (e) {\n\t      existingOnMouseEnter && existingOnMouseEnter(e);\n\t      _setStyleState(component, key, { ':hover': true });\n\t    };\n\t\n\t    var existingOnMouseLeave = props.onMouseLeave;\n\t    newProps.onMouseLeave = function (e) {\n\t      existingOnMouseLeave && existingOnMouseLeave(e);\n\t      _setStyleState(component, key, { ':hover': false });\n\t    };\n\t  }\n\t\n\t  if (style[':active']) {\n\t    var existingOnMouseDown = props.onMouseDown;\n\t    newProps.onMouseDown = function (e) {\n\t      existingOnMouseDown && existingOnMouseDown(e);\n\t      component._lastMouseDown = Date.now();\n\t      _setStyleState(component, key, { ':active': true });\n\t    };\n\t  }\n\t\n\t  if (style[':focus']) {\n\t    var existingOnFocus = props.onFocus;\n\t    newProps.onFocus = function (e) {\n\t      existingOnFocus && existingOnFocus(e);\n\t      _setStyleState(component, key, { ':focus': true });\n\t    };\n\t\n\t    var existingOnBlur = props.onBlur;\n\t    newProps.onBlur = function (e) {\n\t      existingOnBlur && existingOnBlur(e);\n\t      _setStyleState(component, key, { ':focus': false });\n\t    };\n\t  }\n\t\n\t  // Merge the styles in the order they were defined\n\t  var interactionStyles = Object.keys(style).filter(function (name) {\n\t    return name === ':active' && _getStyleState(component, key, ':active') || name === ':hover' && _getStyleState(component, key, ':hover') || name === ':focus' && _getStyleState(component, key, ':focus');\n\t  }).map(function (name) {\n\t    return style[name];\n\t  });\n\t\n\t  if (interactionStyles.length) {\n\t    newStyle = _mergeStyles([newStyle].concat(interactionStyles));\n\t  }\n\t\n\t  if (style[':active'] && !component._radiumMouseUpListener && ExecutionEnvironment.canUseEventListeners) {\n\t    component._radiumMouseUpListener = MouseUpListener.subscribe(_mouseUp.bind(null, component));\n\t  }\n\t\n\t  newProps.style = Prefixer.getPrefixedStyle(newStyle);\n\t\n\t  return _cloneElement(renderedElement, newProps, newChildren);\n\t};\n\t\n\t// Exposing methods for tests is ugly, but the alternative, re-requiring the\n\t// module each time, is too slow\n\tresolveStyles.__clearStateForTests = function () {\n\t  mediaQueryListByQueryString = {};\n\t};\n\t\n\tmodule.exports = resolveStyles;\n\t\n\t// Bail if we've already processed this element. This ensures that only the\n\t// owner of an element processes that element, since the owner's render\n\t// function will be called first (which will always be the case, since you\n\t// can't know what else to render until you render the parent component).\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar _callbacks = [];\n\tvar _mouseUpListenerIsActive = false;\n\t\n\tvar _handleMouseUp = function _handleMouseUp(ev) {\n\t  _callbacks.forEach(function (callback) {\n\t    callback(ev);\n\t  });\n\t};\n\t\n\tvar subscribe = function subscribe(callback) {\n\t  if (_callbacks.indexOf(callback) === -1) {\n\t    _callbacks.push(callback);\n\t  }\n\t\n\t  if (!_mouseUpListenerIsActive) {\n\t    window.addEventListener('mouseup', _handleMouseUp);\n\t    _mouseUpListenerIsActive = true;\n\t  }\n\t\n\t  return {\n\t    remove: function remove() {\n\t      var index = _callbacks.indexOf(callback);\n\t      _callbacks.splice(index, 1);\n\t\n\t      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n\t        window.removeEventListener('mouseup', _handleMouseUp);\n\t        _mouseUpListenerIsActive = false;\n\t      }\n\t    }\n\t  };\n\t};\n\t\n\tmodule.exports = {\n\t  subscribe: subscribe\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = __webpack_require__(9);\n\t\n\tvar VALID_KEYS = [':active', ':focus', ':hover'];\n\t\n\tvar getState = function getState(state, elementKey, value) {\n\t  if (VALID_KEYS.indexOf(value) === -1) {\n\t    throw new Error('Radium.getState invalid value param: `' + value + '`');\n\t  }\n\t\n\t  var key = getStateKey(elementKey);\n\t\n\t  return !!(state && state._radiumStyleState && state._radiumStyleState[key] && state._radiumStyleState[key][value]) || false;\n\t};\n\t\n\tmodule.exports = getState;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar getStateKey = function getStateKey(elementKey) {\n\t  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n\t};\n\t\n\tmodule.exports = getStateKey;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Based on https://github.com/jsstyles/css-vendor, but without having to\n\t * convert between different cases all the time.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\tvar arrayFind = __webpack_require__(12);\n\t\n\tvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\t\n\tvar infoByCssPrefix = {\n\t  '-moz-': {\n\t    cssPrefix: '-moz-',\n\t    jsPrefix: 'Moz',\n\t    alternativeProperties: {\n\t      // OLD - Firefox 19-\n\t      alignItems: [{ css: '-moz-box-align', js: 'MozBoxAlign' }],\n\t      flex: [{ css: '-moz-box-flex', js: 'MozBoxFlex' }],\n\t      flexDirection: [{ css: '-moz-box-orient', js: 'MozBoxOrient' }],\n\t      justifyContent: [{ css: '-moz-box-pack', js: 'MozBoxPack' }],\n\t      order: [{ css: '-moz-box-ordinal-group', js: 'MozBoxOrdinalGroup' }]\n\t    },\n\t    alternativeValues: {\n\t      // OLD - Firefox 19-\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-moz-box']\n\t      },\n\t      flexDirection: {\n\t        column: ['vertical'],\n\t        row: ['horizontal']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  },\n\t  '-ms-': {\n\t    cssPrefix: '-ms-',\n\t    jsPrefix: 'ms',\n\t    alternativeProperties: {\n\t      // TWEENER - IE 10\n\t      alignContent: [{ css: '-ms-flex-line-pack', js: 'msFlexLinePack' }],\n\t      alignItems: [{ css: '-ms-flex-align', js: 'msFlexAlign' }],\n\t      alignSelf: [{ css: '-ms-flex-align-item', js: 'msFlexAlignItem' }],\n\t      justifyContent: [{ css: '-ms-flex-pack', js: 'msFlexPack' }],\n\t      order: [{ css: '-ms-flex-order', js: 'msFlexOrder' }]\n\t    },\n\t    alternativeValues: {\n\t      // TWEENER - IE 10\n\t      alignContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      },\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      alignSelf: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-ms-flexbox'],\n\t        'inline-flex': ['-ms-inline-flexbox']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify'],\n\t        'space-around': ['distribute']\n\t      }\n\t    }\n\t  },\n\t  '-o-': {\n\t    cssPrefix: '-o-',\n\t    jsPrefix: 'O'\n\t  },\n\t  '-webkit-': {\n\t    cssPrefix: '-webkit-',\n\t    jsPrefix: 'Webkit',\n\t    alternativeProperties: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: [{ css: '-webkit-box-align', js: 'WebkitBoxAlign' }],\n\t      flex: [{ css: '-webkit-box-flex', js: 'MozBoxFlex' }],\n\t      flexDirection: [{ css: '-webkit-box-orient', js: 'WebkitBoxOrient' }],\n\t      justifyContent: [{ css: '-webkit-box-pack', js: 'WebkitBoxPack' }],\n\t      order: [{ css: '-webkit-box-ordinal-group', js: 'WebkitBoxOrdinalGroup' }]\n\t    },\n\t    alternativeValues: {\n\t      // OLD - iOS 6-, Safari 3.1-6\n\t      alignItems: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end']\n\t      },\n\t      display: {\n\t        flex: ['-webkit-box']\n\t      },\n\t      flexDirection: {\n\t        row: ['horizontal'],\n\t        column: ['vertical']\n\t      },\n\t      justifyContent: {\n\t        'flex-start': ['start'],\n\t        'flex-end': ['end'],\n\t        'space-between': ['justify']\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t * Copied from React core June 22, 2015.\n\t * https://github.com/facebook/react/blob/\n\t * ba81b60ad8e93b747be42a03b797065932c49c96/\n\t * src/renderers/dom/shared/CSSProperty.js\n\t */\n\tvar isUnitlessNumber = {\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  strokeDashoffset: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\tvar domStyle = {};\n\tvar prefixedPropertyCache = {};\n\tvar prefixedValueCache = {};\n\tvar prefixInfo = {\n\t  cssPrefix: '',\n\t  jsPrefix: ''\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  domStyle = document.createElement('p').style;\n\t\n\t  // older Firefox versions may have no float property in style object\n\t  // so we need to add it manually\n\t  if (domStyle.float === undefined) {\n\t    domStyle.float = '';\n\t  }\n\t\n\t  // Based on http://davidwalsh.name/vendor-prefix\n\t  var cssVendorPrefix;\n\t  var prefixMatch;\n\t  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\t\n\t  // Array.prototype.slice.call(windowStyles) fails with\n\t  // \"Uncaught TypeError: undefined is not a function\"\n\t  // in older versions Android (KitKat) web views\n\t  for (var i = 0; i < windowStyles.length; i++) {\n\t    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\t\n\t    if (prefixMatch) {\n\t      break;\n\t    }\n\t  }\n\t\n\t  cssVendorPrefix = prefixMatch && prefixMatch[0];\n\t\n\t  prefixInfo = infoByCssPrefix[cssVendorPrefix] || prefixInfo;\n\t}\n\t\n\tvar _camelCaseRegex = /([a-z])?([A-Z])/g;\n\tvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n\t  return p1 + '-' + p2.toLowerCase();\n\t};\n\tvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n\t  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n\t};\n\t\n\tvar getPrefixedPropertyName = function getPrefixedPropertyName(property) {\n\t  if (prefixedPropertyCache.hasOwnProperty(property)) {\n\t    return prefixedPropertyCache[property];\n\t  }\n\t\n\t  var unprefixed = {\n\t    css: _camelCaseToDashCase(property),\n\t    js: property,\n\t    isDefaultForServer: true\n\t  };\n\t\n\t  // Try the prefixed version first. Chrome in particular has the `filter` and\n\t  // `webkitFilter` properties availalbe on the style object, but only the\n\t  // prefixed version actually works.\n\t  var possiblePropertyNames = [\n\t  // Prefixed\n\t  {\n\t    css: prefixInfo.cssPrefix + _camelCaseToDashCase(property),\n\t    js: prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1)\n\t  }, unprefixed];\n\t\n\t  // Alternative property names\n\t  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n\t    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n\t  }\n\t\n\t  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n\t    if (possiblePropertyName.js in domStyle) {\n\t      return possiblePropertyName;\n\t    }\n\t  }) || false;\n\t\n\t  return prefixedPropertyCache[property] = workingProperty;\n\t};\n\t\n\t// React is planning to deprecate adding px automatically\n\t// (https://github.com/facebook/react/issues/1873), and if they do, this\n\t// should change to a warning or be removed in favor of React's warning.\n\t// Same goes for below.\n\tvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n\t  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[originalProperty]) {\n\t    return value + 'px';\n\t  }\n\t  return value;\n\t};\n\t\n\tvar _getPrefixedValue = function _getPrefixedValue(property, value, originalProperty) {\n\t  if (!Array.isArray(value)) {\n\t    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n\t    if (!isNaN(value) && value !== null) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n\t    }\n\t\n\t    if (typeof value !== 'string') {\n\t      if (value !== null && value !== undefined) {\n\t        value = value.toString();\n\t      } else {\n\t        return value;\n\t      }\n\t    }\n\t\n\t    // don't test numbers with units (e.g. 10em)\n\t    if (!isNaN(parseInt(value, 10))) {\n\t      return value;\n\t    }\n\t  }\n\t\n\t  var cacheKey = Array.isArray(value) ? value.join(' || ')\n\t  /* babel-eslint bug: https://github.com/babel/babel-eslint/issues/149 */\n\t  /* eslint-disable space-infix-ops */\n\t  :\n\t  /* eslint-enable space-infix-ops */\n\t  property + value;\n\t\n\t  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n\t    return prefixedValueCache[cacheKey];\n\t  }\n\t\n\t  var possibleValues;\n\t  if (Array.isArray(value)) {\n\t    // Add px for the same values React would, otherwise the testing below will\n\t    // fail and it will try to fallback.\n\t    possibleValues = value.map(function (v) {\n\t      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n\t    });\n\t\n\t    // Add prefixed versions\n\t    possibleValues = possibleValues.concat(value.filter(function (v) {\n\t      return !isNaN(v);\n\t    }) // Don't prefix numbers\n\t    .map(function (v) {\n\t      return prefixInfo.cssPrefix + v;\n\t    }));\n\t  } else {\n\t    possibleValues = [\n\t    // Unprefixed\n\t    value,\n\t    // Prefixed\n\t    prefixInfo.cssPrefix + value];\n\t  }\n\t\n\t  // Alternative values\n\t  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n\t    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n\t  }\n\t\n\t  // Test possible value in order\n\t  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n\t    domStyle[property] = '';\n\t    domStyle[property] = possibleValue;\n\t\n\t    // Note that we just make sure it is not an empty string. Browsers will\n\t    // sometimes rewrite values, but still accept them. They will set the value\n\t    // to an empty string if not supported.\n\t    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n\t    //      but \"foobar\" becomes \"\", since it is not supported.\n\t    return !!domStyle[property];\n\t  });\n\t\n\t  if (workingValue) {\n\t    prefixedValueCache[cacheKey] = workingValue;\n\t  } else {\n\t    // Unsupported, assume unprefixed works, but warn\n\t    prefixedValueCache[cacheKey] = value;\n\t\n\t    if (false) {\n\t      /* eslint-disable no-console */\n\t      if (console && console.warn) {\n\t        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"');\n\t      }\n\t      /* eslint-enable no-console */\n\t    }\n\t  }\n\t\n\t  return prefixedValueCache[cacheKey];\n\t};\n\t\n\t// Returns a new style object with vendor prefixes added to property names\n\t// and values.\n\tvar getPrefixedStyle = function getPrefixedStyle(style, mode /* 'css' or 'js' */) {\n\t  mode = mode || 'js';\n\t\n\t  if (!ExecutionEnvironment.canUseDOM) {\n\t    return Object.keys(style).reduce(function (newStyle, key) {\n\t      var value = style[key];\n\t      var newKey = mode === 'css' ? _camelCaseToDashCase(key) : key;\n\t      var newValue = Array.isArray(value) ? value[0] : value;\n\t      newStyle[newKey] = newValue;\n\t      return newStyle;\n\t    }, {});\n\t  }\n\t\n\t  var prefixedStyle = {};\n\t  Object.keys(style).forEach(function (property) {\n\t    var value = style[property];\n\t\n\t    var newProperty = getPrefixedPropertyName(property);\n\t    if (newProperty === false) {\n\t      // Ignore unsupported properties\n\t      /* eslint-disable no-console */\n\t      if (console && console.warn) {\n\t        console.warn('Unsupported CSS property \"' + property + '\"');\n\t      }\n\t      /* eslint-enable no-console */\n\t      return;\n\t    }\n\t\n\t    var newValue = _getPrefixedValue(newProperty.js, value, property);\n\t\n\t    prefixedStyle[newProperty[mode]] = newValue;\n\t  });\n\t  return prefixedStyle;\n\t};\n\t\n\tmodule.exports = {\n\t  getPrefixedPropertyName: getPrefixedPropertyName,\n\t  getPrefixedStyle: getPrefixedStyle,\n\t  cssPrefix: prefixInfo.cssPrefix,\n\t  jsPrefix: prefixInfo.jsPrefix\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2015 Jed Watson.\n\t  Based on code that is Copyright 2013-2015, Facebook, Inc.\n\t  All rights reserved.\n\t*/\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar canUseDOM = !!(\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow.document &&\n\t\t\twindow.document.createElement\n\t\t);\n\t\n\t\tvar ExecutionEnvironment = {\n\t\n\t\t\tcanUseDOM: canUseDOM,\n\t\n\t\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\t\n\t\t\tcanUseEventListeners:\n\t\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t\t\tcanUseViewport: canUseDOM && !!window.screen\n\t\n\t\t};\n\t\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn ExecutionEnvironment;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = ExecutionEnvironment;\n\t\t} else {\n\t\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t\t}\n\t\n\t}());\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction find(array, predicate, context) {\n\t  if (typeof Array.prototype.find === 'function') {\n\t    return array.find(predicate, context);\n\t  }\n\t\n\t  context = context || this;\n\t  var length = array.length;\n\t  var i;\n\t\n\t  if (typeof predicate !== 'function') {\n\t    throw new TypeError(predicate + ' is not a function');\n\t  }\n\t\n\t  for (i = 0; i < length; i++) {\n\t    if (predicate.call(context, array[i], i, array)) {\n\t      return array[i];\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = find;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\t\n\tvar _matchMediaFunction = ExecutionEnvironment.canUseDOM && window && window.matchMedia && function (mediaQueryString) {\n\t  return window.matchMedia(mediaQueryString);\n\t};\n\t\n\tmodule.exports = {\n\t  canMatchMedia: function canMatchMedia() {\n\t    return typeof _matchMediaFunction === 'function';\n\t  },\n\t\n\t  matchMedia: function matchMedia(query) {\n\t    return _matchMediaFunction(query);\n\t  },\n\t\n\t  setMatchMedia: function setMatchMedia(nextMatchMediaFunction) {\n\t    _matchMediaFunction = nextMatchMediaFunction;\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar createMarkupForStyles = __webpack_require__(15);\n\tvar Prefixer = __webpack_require__(10);\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar buildCssString = function buildCssString(selector, rules) {\n\t  if (!selector || !rules) {\n\t    return;\n\t  }\n\t\n\t  var prefixedRules = Prefixer.getPrefixedStyle(rules, 'css');\n\t  var serializedRules = createMarkupForStyles(prefixedRules);\n\t\n\t  return selector + '{' + serializedRules + '}';\n\t};\n\t\n\tvar Style = React.createClass({\n\t  displayName: 'Style',\n\t\n\t  propTypes: {\n\t    rules: React.PropTypes.object,\n\t    scopeSelector: React.PropTypes.string\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      scopeSelector: ''\n\t    };\n\t  },\n\t\n\t  _buildStyles: function _buildStyles(styles) {\n\t    var _this = this;\n\t\n\t    return Object.keys(styles).reduce(function (accumulator, selector) {\n\t      var rules = styles[selector];\n\t\n\t      if (selector === 'mediaQueries') {\n\t        accumulator += _this._buildMediaQueryString(rules);\n\t      } else {\n\t        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n\t        accumulator += buildCssString(completeSelector, rules);\n\t      }\n\t\n\t      return accumulator;\n\t    }, '');\n\t  },\n\t\n\t  _buildMediaQueryString: function _buildMediaQueryString(mediaQueryObj) {\n\t    var _this2 = this;\n\t\n\t    var contextMediaQueries = this._getContextMediaQueries();\n\t    var mediaQueryString = '';\n\t\n\t    Object.keys(mediaQueryObj).forEach(function (query) {\n\t      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n\t      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(mediaQueryObj[query]) + '}';\n\t    });\n\t\n\t    return mediaQueryString;\n\t  },\n\t\n\t  _getContextMediaQueries: function _getContextMediaQueries() {\n\t    var contextMediaQueries = {};\n\t    if (this.context && this.context.mediaQueries) {\n\t      Object.keys(this.context.mediaQueries).forEach((function (query) {\n\t        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n\t      }).bind(this));\n\t    }\n\t\n\t    return contextMediaQueries;\n\t  },\n\t\n\t  render: function render() {\n\t    if (!this.props.rules) {\n\t      return null;\n\t    }\n\t\n\t    var styles = this._buildStyles(this.props.rules);\n\t\n\t    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n\t  }\n\t});\n\t\n\tmodule.exports = Style;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar createMarkupForStyles = function createMarkupForStyles(style, spaces) {\n\t  spaces = spaces || '';\n\t  return Object.keys(style).map(function (property) {\n\t    return spaces + property + ': ' + style[property] + ';';\n\t  }).join('\\n');\n\t};\n\t\n\tmodule.exports = createMarkupForStyles;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* @flow */\n\t\n\t'use strict';\n\t\n\tvar createMarkupForStyles = __webpack_require__(15);\n\tvar Prefixer = __webpack_require__(10);\n\t\n\tvar ExecutionEnvironment = __webpack_require__(11);\n\t\n\tvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\n\t\n\tvar animationIndex = 1;\n\tvar animationStyleSheet = null;\n\tvar keyframesPrefixed = null;\n\t\n\tif (isAnimationSupported) {\n\t  animationStyleSheet = document.createElement('style');\n\t  document.head.appendChild(animationStyleSheet);\n\t\n\t  // Test if prefix needed for keyframes (copied from PrefixFree)\n\t  keyframesPrefixed = 'keyframes';\n\t  animationStyleSheet.textContent = '@keyframes {}';\n\t  if (!animationStyleSheet.sheet.cssRules.length) {\n\t    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n\t  }\n\t}\n\t\n\t// Simple animation helper that injects CSS into a style object containing the\n\t// keyframes, and returns a string with the generated animation name.\n\tvar keyframes = function keyframes(keyframeRules) {\n\t  var name = 'Animation' + animationIndex;\n\t  animationIndex += 1;\n\t\n\t  if (!isAnimationSupported) {\n\t    return name;\n\t  }\n\t\n\t  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n\t    var props = keyframeRules[percentage];\n\t    var prefixedProps = Prefixer.getPrefixedStyle(props, 'css');\n\t    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n\t    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n\t  }).join('\\n') + '\\n}\\n';\n\t\n\t  // for flow\n\t  /* istanbul ignore next */\n\t  if (!animationStyleSheet) {\n\t    throw new Error('keyframes not initialized properly');\n\t  }\n\t\n\t  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n\t  return name;\n\t};\n\t\n\tmodule.exports = keyframes;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** victory-tree.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bebce97fc3e4a09803b9\n **/","module.exports = {\n  VictoryTree: require(\"./components/victory-tree\")\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/* eslint no-unused-vars:0 */\n\nimport d3 from \"d3\";\nimport React from \"react\";\nimport Radium from \"radium\";\n\n@Radium\nclass VictoryTree extends React.Component {\n    constructor(props) {\n      super(props);\n      this.diagonal = d3.svg.diagonal().projection(\n        function(d) { return [d.y, d.x]; }\n      );\n    }\n    drawNodes(nodes) {\n      var nodeComponents = nodes.map((node, index) => {\n        return (\n          this.props.node(node, index)\n        )\n      })\n      return (<g>{nodeComponents}</g>)\n    }\n    drawLinks(links) {\n      var linkComponents = links.map((link, index) => {\n        return (\n          this.props.link(link, this.diagonal, index)\n        )\n      })\n      return (<g>\n        {linkComponents}\n      </g>)\n    }\n    render() {\n      // todo - check for changes in width height in componentWillRecieveProps\n      var d3Tree = d3.layout.tree().size(\n        [\n          this.props.height,\n          this.props.width\n        ]\n      );\n      var nodes = d3Tree.nodes(this.props.data);\n      var links = d3Tree.links(nodes);\n      return (\n        <g transform={this.props.transform}>\n          {this.drawNodes(nodes)}\n          {this.drawLinks(links)}\n        </g>\n      )\n    }\n};\n\nexport default VictoryTree;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/victory-tree.jsx\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar Enhancer = require('./enhancer');\n\nmodule.exports = function (ComposedComponent) {\n  return Enhancer(ComposedComponent);\n};\nmodule.exports.Style = require('./components/style');\nmodule.exports.getState = require('./get-state');\nmodule.exports.keyframes = require('./keyframes');\nmodule.exports.Config = require('./config');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }\n\nvar resolveStyles = require('./resolve-styles.js');\n\nvar enhanceWithRadium = function enhanceWithRadium(ComposedComponent) {\n  var RadiumEnhancer = (function (_ComposedComponent) {\n    function RadiumEnhancer() {\n      _classCallCheck(this, RadiumEnhancer);\n\n      _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'constructor', this).apply(this, arguments);\n\n      this.state = this.state || {};\n      this.state._radiumStyleState = {};\n    }\n\n    _inherits(RadiumEnhancer, _ComposedComponent);\n\n    _createClass(RadiumEnhancer, [{\n      key: 'render',\n      value: function render() {\n        var renderedElement = _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'render', this).call(this);\n        return resolveStyles(this, renderedElement);\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (_get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this)) {\n          _get(Object.getPrototypeOf(RadiumEnhancer.prototype), 'componentWillUnmount', this).call(this);\n        }\n\n        if (this._radiumMouseUpListener) {\n          this._radiumMouseUpListener.remove();\n        }\n\n        if (this._radiumMediaQueryListenersByQuery) {\n          Object.keys(this._radiumMediaQueryListenersByQuery).forEach(function (query) {\n            this._radiumMediaQueryListenersByQuery[query].remove();\n          }, this);\n        }\n      }\n    }]);\n\n    return RadiumEnhancer;\n  })(ComposedComponent);\n\n  // Class inheritance uses Object.create and because of __proto__ issues\n  // with IE <10 any static properties of the superclass aren't inherited and\n  // so need to be manually populated\n  // See http://babeljs.io/docs/advanced/caveats/#classes-10-and-below-\n  var staticKeys = ['defaultProps', 'propTypes', 'contextTypes', 'childContextTypes'];\n\n  staticKeys.forEach(function (key) {\n    if (ComposedComponent.hasOwnProperty(key)) {\n      RadiumEnhancer[key] = ComposedComponent[key];\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This fixes React Hot Loader by exposing the original components top level\n    // prototype methods on the Radium enhanced prototype as discussed in #219.\n    Object.keys(ComposedComponent.prototype).forEach(function (key) {\n      if (!RadiumEnhancer.prototype.hasOwnProperty(key)) {\n        RadiumEnhancer.prototype[key] = ComposedComponent.prototype[key];\n      }\n    });\n  }\n\n  RadiumEnhancer.displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n\n  return RadiumEnhancer;\n};\n\nmodule.exports = enhanceWithRadium;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/enhancer.js\n ** module id = 5\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar MouseUpListener = require('./mouse-up-listener');\nvar getState = require('./get-state');\nvar getStateKey = require('./get-state-key');\nvar Prefixer = require('./prefixer');\nvar Config = require('./config');\n\nvar ExecutionEnvironment = require('exenv');\nvar React = require('react');\n\n// babel-eslint 3.1.7 fails here for some reason, error:\n//   0:0  error  Cannot call method 'isSequenceExpression' of undefined\n//\n// declare class RadiumComponent extends ReactComponent {\n//   _lastMouseDown: number,\n//   _radiumMediaQueryListenersByQuery: Object<string, {remove: () => void}>,\n//   _radiumMouseUpListener: {remove: () => void},\n// }\n\nvar mediaQueryListByQueryString = {};\n\nvar _isSpecialKey = function _isSpecialKey(key) {\n  return key[0] === ':' || key[0] === '@';\n};\n\nvar _getStyleState = function _getStyleState(component, key, value) {\n  return getState(component.state, key, value);\n};\n\nvar _setStyleState = function _setStyleState(component, key, newState) {\n  var existing = component._lastRadiumState || component.state && component.state._radiumStyleState || {};\n\n  var state = { _radiumStyleState: _extends({}, existing) };\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key], newState);\n\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\n// Merge style objects. Special casing for props starting with ';'; the values\n// should be objects, and are merged with others of the same name (instead of\n// overwriting).\nvar _mergeStyles = function _mergeStyles(styles) {\n  var result = {};\n\n  styles.forEach(function (style) {\n    if (!style || typeof style !== 'object' || Array.isArray(style)) {\n      return;\n    }\n\n    Object.keys(style).forEach(function (key) {\n      if (_isSpecialKey(key) && result[key]) {\n        result[key] = _mergeStyles([result[key], style[key]]);\n      } else {\n        result[key] = style[key];\n      }\n    });\n  });\n\n  return result;\n};\n\nvar _mouseUp = function _mouseUp(component) {\n  Object.keys(component.state._radiumStyleState).forEach(function (key) {\n    if (_getStyleState(component, key, ':active')) {\n      _setStyleState(component, key, { ':active': false });\n    }\n  });\n};\n\nvar _onMediaQueryChange = function _onMediaQueryChange(component, query, mediaQueryList) {\n  var state = {};\n  state[query] = mediaQueryList.matches;\n  _setStyleState(component, '_all', state);\n};\n\nvar _resolveMediaQueryStyles = function _resolveMediaQueryStyles(component, style) {\n  if (!Config.canMatchMedia()) {\n    return style;\n  }\n\n  Object.keys(style).filter(function (name) {\n    return name[0] === '@';\n  }).map(function (query) {\n    var mediaQueryStyles = style[query];\n    query = query.replace('@media ', '');\n\n    // Create a global MediaQueryList if one doesn't already exist\n    var mql = mediaQueryListByQueryString[query];\n    if (!mql) {\n      mediaQueryListByQueryString[query] = mql = Config.matchMedia(query);\n    }\n\n    // Keep track of which keys already have listeners\n    if (!component._radiumMediaQueryListenersByQuery) {\n      component._radiumMediaQueryListenersByQuery = {};\n    }\n\n    if (!component._radiumMediaQueryListenersByQuery[query]) {\n      var listener = _onMediaQueryChange.bind(null, component, query);\n      mql.addListener(listener);\n      component._radiumMediaQueryListenersByQuery[query] = {\n        remove: function remove() {\n          mql.removeListener(listener);\n        }\n      };\n    }\n\n    // Apply media query states\n    if (mql.matches) {\n      style = _mergeStyles([style, mediaQueryStyles]);\n    }\n  });\n\n  return style;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special non-enumerable prop to\n// make sure we don't process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  var clone = React.cloneElement(renderedElement, newProps, newChildren);\n\n  Object.defineProperty(clone.props, '_radiumDidResolveStyles', { value: true, enumerable: false });\n\n  return clone;\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\nvar resolveStyles = function resolveStyles(component, // ReactComponent, flow+eslint complaining\nrenderedElement, // ReactElement\nexistingKeyMap) {\n  // ReactElement\n  existingKeyMap = existingKeyMap || {};\n\n  if (!renderedElement || renderedElement.props && renderedElement.props._radiumDidResolveStyles) {\n    return renderedElement;\n  }\n\n  // Recurse over children first in case we bail early. Note that children only\n  // include those rendered in `this` component. Child nodes in other components\n  // will not be here, so each component needs to use Radium.\n  var newChildren;\n  var oldChildren = renderedElement.props.children;\n  if (oldChildren) {\n    var childrenType = typeof oldChildren;\n    if (childrenType === 'string' || childrenType === 'number' || childrenType === 'function') {\n      // Don't do anything with a single primitive child or functions\n      newChildren = oldChildren;\n    } else if (React.Children.count(oldChildren) === 1 && oldChildren.type) {\n      // If a React Element is an only child, don't wrap it in an array for\n      // React.Children.map() for React.Children.only() compatibility.\n      var onlyChild = React.Children.only(oldChildren);\n      newChildren = resolveStyles(component, onlyChild, existingKeyMap);\n    } else {\n      newChildren = React.Children.map(oldChildren, function (child) {\n        if (React.isValidElement(child)) {\n          return resolveStyles(component, child, existingKeyMap);\n        }\n\n        return child;\n      });\n    }\n  }\n\n  // Bail early if element is not a simple ReactDOMElement.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string') {\n    if (oldChildren === newChildren) {\n      return renderedElement;\n    }\n\n    return _cloneElement(renderedElement, renderedElement.props, newChildren);\n  }\n\n  var props = renderedElement.props;\n  var style = props.style;\n  var newProps = {};\n\n  // Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n  // Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\n  if (Array.isArray(style)) {\n    style = _mergeStyles(style);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Warn if you use longhand and shorthand properties in the same style\n    // object.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties\n\n    var shorthandPropertyExpansions = {\n      'background': ['backgroundAttachment', 'backgroundBlendMode', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundRepeatX', 'backgroundRepeatY', 'backgroundSize'],\n      'border': ['borderBottom', 'borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderColor', 'borderLeft', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRight', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderStyle', 'borderTop', 'borderTopColor', 'borderTopStyle', 'borderTopWidth', 'borderWidth'],\n      'borderImage': ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],\n      'borderRadius': ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],\n      'font': ['fontFamily', 'fontKerning', 'fontSize', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantLigatures', 'fontWeight', 'lineHeight'],\n      'listStyle': ['listStyleImage', 'listStylePosition', 'listStyleType'],\n      'margin': ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n      'padding': ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n      'transition': ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction']\n    };\n\n    var checkProps = function checkProps(s) {\n      if (typeof s !== 'object' || !s) {\n        return;\n      }\n\n      var styleKeys = Object.keys(s);\n      styleKeys.forEach(function (styleKey) {\n        if (shorthandPropertyExpansions[styleKey] && shorthandPropertyExpansions[styleKey].some(function (sp) {\n          return styleKeys.indexOf(sp) !== -1;\n        })) {\n          /* eslint-disable no-console */\n          console.warn('Radium: property \"' + styleKey + '\" in style object', style, ': do not mix longhand and ' + 'shorthand properties in the same style object. Check the render ' + 'method of ' + component.constructor.displayName + '.', 'See https://github.com/FormidableLabs/radium/issues/95 for more ' + 'information.');\n          /* eslint-enable no-console */\n        }\n      });\n\n      styleKeys.forEach(function (k) {\n        return checkProps(s[k]);\n      });\n    };\n    checkProps(style);\n  }\n\n  // Bail early if no interactive styles.\n  if (!style || !Object.keys(style).some(_isSpecialKey)) {\n    if (style) {\n      // Still perform vendor prefixing, though.\n      newProps.style = Prefixer.getPrefixedStyle(style);\n      return _cloneElement(renderedElement, newProps, newChildren);\n    } else if (newChildren) {\n      return _cloneElement(renderedElement, {}, newChildren);\n    }\n\n    return renderedElement;\n  }\n\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = renderedElement.ref || renderedElement.key;\n  var key = getStateKey(originalKey);\n\n  if (existingKeyMap[key]) {\n    throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.'));\n  }\n\n  existingKeyMap[key] = true;\n\n  // Media queries can contain pseudo styles, like :hover\n  style = _resolveMediaQueryStyles(component, style);\n\n  var newStyle = {};\n  Object.keys(style).forEach(function (styleKey) {\n    if (!_isSpecialKey(styleKey)) {\n      newStyle[styleKey] = style[styleKey];\n    }\n  });\n\n  // Only add handlers if necessary\n  if (style[':hover'] || style[':active']) {\n    // Always call the existing handler if one is already defined.\n    // This code, and the very similar ones below, could be abstracted a bit\n    // more, but it hurts readability IMO.\n    var existingOnMouseEnter = props.onMouseEnter;\n    newProps.onMouseEnter = function (e) {\n      existingOnMouseEnter && existingOnMouseEnter(e);\n      _setStyleState(component, key, { ':hover': true });\n    };\n\n    var existingOnMouseLeave = props.onMouseLeave;\n    newProps.onMouseLeave = function (e) {\n      existingOnMouseLeave && existingOnMouseLeave(e);\n      _setStyleState(component, key, { ':hover': false });\n    };\n  }\n\n  if (style[':active']) {\n    var existingOnMouseDown = props.onMouseDown;\n    newProps.onMouseDown = function (e) {\n      existingOnMouseDown && existingOnMouseDown(e);\n      component._lastMouseDown = Date.now();\n      _setStyleState(component, key, { ':active': true });\n    };\n  }\n\n  if (style[':focus']) {\n    var existingOnFocus = props.onFocus;\n    newProps.onFocus = function (e) {\n      existingOnFocus && existingOnFocus(e);\n      _setStyleState(component, key, { ':focus': true });\n    };\n\n    var existingOnBlur = props.onBlur;\n    newProps.onBlur = function (e) {\n      existingOnBlur && existingOnBlur(e);\n      _setStyleState(component, key, { ':focus': false });\n    };\n  }\n\n  // Merge the styles in the order they were defined\n  var interactionStyles = Object.keys(style).filter(function (name) {\n    return name === ':active' && _getStyleState(component, key, ':active') || name === ':hover' && _getStyleState(component, key, ':hover') || name === ':focus' && _getStyleState(component, key, ':focus');\n  }).map(function (name) {\n    return style[name];\n  });\n\n  if (interactionStyles.length) {\n    newStyle = _mergeStyles([newStyle].concat(interactionStyles));\n  }\n\n  if (style[':active'] && !component._radiumMouseUpListener && ExecutionEnvironment.canUseEventListeners) {\n    component._radiumMouseUpListener = MouseUpListener.subscribe(_mouseUp.bind(null, component));\n  }\n\n  newProps.style = Prefixer.getPrefixedStyle(newStyle);\n\n  return _cloneElement(renderedElement, newProps, newChildren);\n};\n\n// Exposing methods for tests is ugly, but the alternative, re-requiring the\n// module each time, is too slow\nresolveStyles.__clearStateForTests = function () {\n  mediaQueryListByQueryString = {};\n};\n\nmodule.exports = resolveStyles;\n\n// Bail if we've already processed this element. This ensures that only the\n// owner of an element processes that element, since the owner's render\n// function will be called first (which will always be the case, since you\n// can't know what else to render until you render the parent component).\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/resolve-styles.js\n ** module id = 6\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar _callbacks = [];\nvar _mouseUpListenerIsActive = false;\n\nvar _handleMouseUp = function _handleMouseUp(ev) {\n  _callbacks.forEach(function (callback) {\n    callback(ev);\n  });\n};\n\nvar subscribe = function subscribe(callback) {\n  if (_callbacks.indexOf(callback) === -1) {\n    _callbacks.push(callback);\n  }\n\n  if (!_mouseUpListenerIsActive) {\n    window.addEventListener('mouseup', _handleMouseUp);\n    _mouseUpListenerIsActive = true;\n  }\n\n  return {\n    remove: function remove() {\n      var index = _callbacks.indexOf(callback);\n      _callbacks.splice(index, 1);\n\n      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n        window.removeEventListener('mouseup', _handleMouseUp);\n        _mouseUpListenerIsActive = false;\n      }\n    }\n  };\n};\n\nmodule.exports = {\n  subscribe: subscribe\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/mouse-up-listener.js\n ** module id = 7\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = require('./get-state-key');\n\nvar VALID_KEYS = [':active', ':focus', ':hover'];\n\nvar getState = function getState(state, elementKey, value) {\n  if (VALID_KEYS.indexOf(value) === -1) {\n    throw new Error('Radium.getState invalid value param: `' + value + '`');\n  }\n\n  var key = getStateKey(elementKey);\n\n  return !!(state && state._radiumStyleState && state._radiumStyleState[key] && state._radiumStyleState[key][value]) || false;\n};\n\nmodule.exports = getState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state.js\n ** module id = 8\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar getStateKey = function getStateKey(elementKey) {\n  return elementKey === null || elementKey === undefined ? 'main' : elementKey.toString();\n};\n\nmodule.exports = getStateKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/get-state-key.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Based on https://github.com/jsstyles/css-vendor, but without having to\n * convert between different cases all the time.\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('exenv');\nvar arrayFind = require('array-find');\n\nvar VENDOR_PREFIX_REGEX = /-(moz|webkit|ms|o)-/;\n\nvar infoByCssPrefix = {\n  '-moz-': {\n    cssPrefix: '-moz-',\n    jsPrefix: 'Moz',\n    alternativeProperties: {\n      // OLD - Firefox 19-\n      alignItems: [{ css: '-moz-box-align', js: 'MozBoxAlign' }],\n      flex: [{ css: '-moz-box-flex', js: 'MozBoxFlex' }],\n      flexDirection: [{ css: '-moz-box-orient', js: 'MozBoxOrient' }],\n      justifyContent: [{ css: '-moz-box-pack', js: 'MozBoxPack' }],\n      order: [{ css: '-moz-box-ordinal-group', js: 'MozBoxOrdinalGroup' }]\n    },\n    alternativeValues: {\n      // OLD - Firefox 19-\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-moz-box']\n      },\n      flexDirection: {\n        column: ['vertical'],\n        row: ['horizontal']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  },\n  '-ms-': {\n    cssPrefix: '-ms-',\n    jsPrefix: 'ms',\n    alternativeProperties: {\n      // TWEENER - IE 10\n      alignContent: [{ css: '-ms-flex-line-pack', js: 'msFlexLinePack' }],\n      alignItems: [{ css: '-ms-flex-align', js: 'msFlexAlign' }],\n      alignSelf: [{ css: '-ms-flex-align-item', js: 'msFlexAlignItem' }],\n      justifyContent: [{ css: '-ms-flex-pack', js: 'msFlexPack' }],\n      order: [{ css: '-ms-flex-order', js: 'msFlexOrder' }]\n    },\n    alternativeValues: {\n      // TWEENER - IE 10\n      alignContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      },\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      alignSelf: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-ms-flexbox'],\n        'inline-flex': ['-ms-inline-flexbox']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify'],\n        'space-around': ['distribute']\n      }\n    }\n  },\n  '-o-': {\n    cssPrefix: '-o-',\n    jsPrefix: 'O'\n  },\n  '-webkit-': {\n    cssPrefix: '-webkit-',\n    jsPrefix: 'Webkit',\n    alternativeProperties: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: [{ css: '-webkit-box-align', js: 'WebkitBoxAlign' }],\n      flex: [{ css: '-webkit-box-flex', js: 'MozBoxFlex' }],\n      flexDirection: [{ css: '-webkit-box-orient', js: 'WebkitBoxOrient' }],\n      justifyContent: [{ css: '-webkit-box-pack', js: 'WebkitBoxPack' }],\n      order: [{ css: '-webkit-box-ordinal-group', js: 'WebkitBoxOrdinalGroup' }]\n    },\n    alternativeValues: {\n      // OLD - iOS 6-, Safari 3.1-6\n      alignItems: {\n        'flex-start': ['start'],\n        'flex-end': ['end']\n      },\n      display: {\n        flex: ['-webkit-box']\n      },\n      flexDirection: {\n        row: ['horizontal'],\n        column: ['vertical']\n      },\n      justifyContent: {\n        'flex-start': ['start'],\n        'flex-end': ['end'],\n        'space-between': ['justify']\n      }\n    }\n  }\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n * Copied from React core June 22, 2015.\n * https://github.com/facebook/react/blob/\n * ba81b60ad8e93b747be42a03b797065932c49c96/\n * src/renderers/dom/shared/CSSProperty.js\n */\nvar isUnitlessNumber = {\n  boxFlex: true,\n  boxFlexGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nvar domStyle = {};\nvar prefixedPropertyCache = {};\nvar prefixedValueCache = {};\nvar prefixInfo = {\n  cssPrefix: '',\n  jsPrefix: ''\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  domStyle = document.createElement('p').style;\n\n  // older Firefox versions may have no float property in style object\n  // so we need to add it manually\n  if (domStyle.float === undefined) {\n    domStyle.float = '';\n  }\n\n  // Based on http://davidwalsh.name/vendor-prefix\n  var cssVendorPrefix;\n  var prefixMatch;\n  var windowStyles = window.getComputedStyle(document.documentElement, '');\n\n  // Array.prototype.slice.call(windowStyles) fails with\n  // \"Uncaught TypeError: undefined is not a function\"\n  // in older versions Android (KitKat) web views\n  for (var i = 0; i < windowStyles.length; i++) {\n    prefixMatch = windowStyles[i].match(VENDOR_PREFIX_REGEX);\n\n    if (prefixMatch) {\n      break;\n    }\n  }\n\n  cssVendorPrefix = prefixMatch && prefixMatch[0];\n\n  prefixInfo = infoByCssPrefix[cssVendorPrefix] || prefixInfo;\n}\n\nvar _camelCaseRegex = /([a-z])?([A-Z])/g;\nvar _camelCaseReplacer = function _camelCaseReplacer(match, p1, p2) {\n  return p1 + '-' + p2.toLowerCase();\n};\nvar _camelCaseToDashCase = function _camelCaseToDashCase(s) {\n  return s.replace(_camelCaseRegex, _camelCaseReplacer);\n};\n\nvar getPrefixedPropertyName = function getPrefixedPropertyName(property) {\n  if (prefixedPropertyCache.hasOwnProperty(property)) {\n    return prefixedPropertyCache[property];\n  }\n\n  var unprefixed = {\n    css: _camelCaseToDashCase(property),\n    js: property,\n    isDefaultForServer: true\n  };\n\n  // Try the prefixed version first. Chrome in particular has the `filter` and\n  // `webkitFilter` properties availalbe on the style object, but only the\n  // prefixed version actually works.\n  var possiblePropertyNames = [\n  // Prefixed\n  {\n    css: prefixInfo.cssPrefix + _camelCaseToDashCase(property),\n    js: prefixInfo.jsPrefix + property[0].toUpperCase() + property.slice(1)\n  }, unprefixed];\n\n  // Alternative property names\n  if (prefixInfo.alternativeProperties && prefixInfo.alternativeProperties[property]) {\n    possiblePropertyNames = possiblePropertyNames.concat(prefixInfo.alternativeProperties[property]);\n  }\n\n  var workingProperty = arrayFind(possiblePropertyNames, function (possiblePropertyName) {\n    if (possiblePropertyName.js in domStyle) {\n      return possiblePropertyName;\n    }\n  }) || false;\n\n  return prefixedPropertyCache[property] = workingProperty;\n};\n\n// React is planning to deprecate adding px automatically\n// (https://github.com/facebook/react/issues/1873), and if they do, this\n// should change to a warning or be removed in favor of React's warning.\n// Same goes for below.\nvar _addPixelSuffixToValueIfNeeded = function _addPixelSuffixToValueIfNeeded(originalProperty, value) {\n  if (value !== 0 && !isNaN(value) && !isUnitlessNumber[originalProperty]) {\n    return value + 'px';\n  }\n  return value;\n};\n\nvar _getPrefixedValue = function _getPrefixedValue(property, value, originalProperty) {\n  if (!Array.isArray(value)) {\n    // don't test numbers (pure or stringy), but do add 'px' prefix if needed\n    if (!isNaN(value) && value !== null) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, value);\n    }\n\n    if (typeof value !== 'string') {\n      if (value !== null && value !== undefined) {\n        value = value.toString();\n      } else {\n        return value;\n      }\n    }\n\n    // don't test numbers with units (e.g. 10em)\n    if (!isNaN(parseInt(value, 10))) {\n      return value;\n    }\n  }\n\n  var cacheKey = Array.isArray(value) ? value.join(' || ')\n  /* babel-eslint bug: https://github.com/babel/babel-eslint/issues/149 */\n  /* eslint-disable space-infix-ops */\n  :\n  /* eslint-enable space-infix-ops */\n  property + value;\n\n  if (prefixedValueCache.hasOwnProperty(cacheKey)) {\n    return prefixedValueCache[cacheKey];\n  }\n\n  var possibleValues;\n  if (Array.isArray(value)) {\n    // Add px for the same values React would, otherwise the testing below will\n    // fail and it will try to fallback.\n    possibleValues = value.map(function (v) {\n      return _addPixelSuffixToValueIfNeeded(originalProperty, v);\n    });\n\n    // Add prefixed versions\n    possibleValues = possibleValues.concat(value.filter(function (v) {\n      return !isNaN(v);\n    }) // Don't prefix numbers\n    .map(function (v) {\n      return prefixInfo.cssPrefix + v;\n    }));\n  } else {\n    possibleValues = [\n    // Unprefixed\n    value,\n    // Prefixed\n    prefixInfo.cssPrefix + value];\n  }\n\n  // Alternative values\n  if (prefixInfo.alternativeValues && prefixInfo.alternativeValues[originalProperty] && prefixInfo.alternativeValues[originalProperty][value]) {\n    possibleValues = possibleValues.concat(prefixInfo.alternativeValues[originalProperty][value]);\n  }\n\n  // Test possible value in order\n  var workingValue = arrayFind(possibleValues, function (possibleValue) {\n    domStyle[property] = '';\n    domStyle[property] = possibleValue;\n\n    // Note that we just make sure it is not an empty string. Browsers will\n    // sometimes rewrite values, but still accept them. They will set the value\n    // to an empty string if not supported.\n    // E.g. for border, \"solid 1px black\" becomes \"1px solid black\"\n    //      but \"foobar\" becomes \"\", since it is not supported.\n    return !!domStyle[property];\n  });\n\n  if (workingValue) {\n    prefixedValueCache[cacheKey] = workingValue;\n  } else {\n    // Unsupported, assume unprefixed works, but warn\n    prefixedValueCache[cacheKey] = value;\n\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable no-console */\n      if (console && console.warn) {\n        console.warn('Unsupported CSS value \"' + value + '\" for property \"' + property + '\"');\n      }\n      /* eslint-enable no-console */\n    }\n  }\n\n  return prefixedValueCache[cacheKey];\n};\n\n// Returns a new style object with vendor prefixes added to property names\n// and values.\nvar getPrefixedStyle = function getPrefixedStyle(style, mode /* 'css' or 'js' */) {\n  mode = mode || 'js';\n\n  if (!ExecutionEnvironment.canUseDOM) {\n    return Object.keys(style).reduce(function (newStyle, key) {\n      var value = style[key];\n      var newKey = mode === 'css' ? _camelCaseToDashCase(key) : key;\n      var newValue = Array.isArray(value) ? value[0] : value;\n      newStyle[newKey] = newValue;\n      return newStyle;\n    }, {});\n  }\n\n  var prefixedStyle = {};\n  Object.keys(style).forEach(function (property) {\n    var value = style[property];\n\n    var newProperty = getPrefixedPropertyName(property);\n    if (newProperty === false) {\n      // Ignore unsupported properties\n      /* eslint-disable no-console */\n      if (console && console.warn) {\n        console.warn('Unsupported CSS property \"' + property + '\"');\n      }\n      /* eslint-enable no-console */\n      return;\n    }\n\n    var newValue = _getPrefixedValue(newProperty.js, value, property);\n\n    prefixedStyle[newProperty[mode]] = newValue;\n  });\n  return prefixedStyle;\n};\n\nmodule.exports = {\n  getPrefixedPropertyName: getPrefixedPropertyName,\n  getPrefixedStyle: getPrefixedStyle,\n  cssPrefix: prefixInfo.cssPrefix,\n  jsPrefix: prefixInfo.jsPrefix\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/prefixer.js\n ** module id = 10\n ** module chunks = 0\n **/","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/~/exenv/index.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nfunction find(array, predicate, context) {\n  if (typeof Array.prototype.find === 'function') {\n    return array.find(predicate, context);\n  }\n\n  context = context || this;\n  var length = array.length;\n  var i;\n\n  if (typeof predicate !== 'function') {\n    throw new TypeError(predicate + ' is not a function');\n  }\n\n  for (i = 0; i < length; i++) {\n    if (predicate.call(context, array[i], i, array)) {\n      return array[i];\n    }\n  }\n}\n\nmodule.exports = find;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/~/array-find/find.js\n ** module id = 12\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar ExecutionEnvironment = require('exenv');\n\nvar _matchMediaFunction = ExecutionEnvironment.canUseDOM && window && window.matchMedia && function (mediaQueryString) {\n  return window.matchMedia(mediaQueryString);\n};\n\nmodule.exports = {\n  canMatchMedia: function canMatchMedia() {\n    return typeof _matchMediaFunction === 'function';\n  },\n\n  matchMedia: function matchMedia(query) {\n    return _matchMediaFunction(query);\n  },\n\n  setMatchMedia: function setMatchMedia(nextMatchMediaFunction) {\n    _matchMediaFunction = nextMatchMediaFunction;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/config.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar createMarkupForStyles = require('../create-markup-for-styles');\nvar Prefixer = require('../prefixer');\n\nvar React = require('react');\n\nvar buildCssString = function buildCssString(selector, rules) {\n  if (!selector || !rules) {\n    return;\n  }\n\n  var prefixedRules = Prefixer.getPrefixedStyle(rules, 'css');\n  var serializedRules = createMarkupForStyles(prefixedRules);\n\n  return selector + '{' + serializedRules + '}';\n};\n\nvar Style = React.createClass({\n  displayName: 'Style',\n\n  propTypes: {\n    rules: React.PropTypes.object,\n    scopeSelector: React.PropTypes.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      scopeSelector: ''\n    };\n  },\n\n  _buildStyles: function _buildStyles(styles) {\n    var _this = this;\n\n    return Object.keys(styles).reduce(function (accumulator, selector) {\n      var rules = styles[selector];\n\n      if (selector === 'mediaQueries') {\n        accumulator += _this._buildMediaQueryString(rules);\n      } else {\n        var completeSelector = (_this.props.scopeSelector ? _this.props.scopeSelector + ' ' : '') + selector;\n        accumulator += buildCssString(completeSelector, rules);\n      }\n\n      return accumulator;\n    }, '');\n  },\n\n  _buildMediaQueryString: function _buildMediaQueryString(mediaQueryObj) {\n    var _this2 = this;\n\n    var contextMediaQueries = this._getContextMediaQueries();\n    var mediaQueryString = '';\n\n    Object.keys(mediaQueryObj).forEach(function (query) {\n      var completeQuery = contextMediaQueries[query] ? contextMediaQueries[query] : query;\n      mediaQueryString += '@media ' + completeQuery + '{' + _this2._buildStyles(mediaQueryObj[query]) + '}';\n    });\n\n    return mediaQueryString;\n  },\n\n  _getContextMediaQueries: function _getContextMediaQueries() {\n    var contextMediaQueries = {};\n    if (this.context && this.context.mediaQueries) {\n      Object.keys(this.context.mediaQueries).forEach((function (query) {\n        contextMediaQueries[query] = this.context.mediaQueries[query].media;\n      }).bind(this));\n    }\n\n    return contextMediaQueries;\n  },\n\n  render: function render() {\n    if (!this.props.rules) {\n      return null;\n    }\n\n    var styles = this._buildStyles(this.props.rules);\n\n    return React.createElement('style', { dangerouslySetInnerHTML: { __html: styles } });\n  }\n});\n\nmodule.exports = Style;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/components/style.js\n ** module id = 14\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar createMarkupForStyles = function createMarkupForStyles(style, spaces) {\n  spaces = spaces || '';\n  return Object.keys(style).map(function (property) {\n    return spaces + property + ': ' + style[property] + ';';\n  }).join('\\n');\n};\n\nmodule.exports = createMarkupForStyles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/create-markup-for-styles.js\n ** module id = 15\n ** module chunks = 0\n **/","/* @flow */\n\n'use strict';\n\nvar createMarkupForStyles = require('./create-markup-for-styles');\nvar Prefixer = require('./prefixer');\n\nvar ExecutionEnvironment = require('exenv');\n\nvar isAnimationSupported = ExecutionEnvironment.canUseDOM && Prefixer.getPrefixedPropertyName('animation') !== false;\n\nvar animationIndex = 1;\nvar animationStyleSheet = null;\nvar keyframesPrefixed = null;\n\nif (isAnimationSupported) {\n  animationStyleSheet = document.createElement('style');\n  document.head.appendChild(animationStyleSheet);\n\n  // Test if prefix needed for keyframes (copied from PrefixFree)\n  keyframesPrefixed = 'keyframes';\n  animationStyleSheet.textContent = '@keyframes {}';\n  if (!animationStyleSheet.sheet.cssRules.length) {\n    keyframesPrefixed = Prefixer.cssPrefix + 'keyframes';\n  }\n}\n\n// Simple animation helper that injects CSS into a style object containing the\n// keyframes, and returns a string with the generated animation name.\nvar keyframes = function keyframes(keyframeRules) {\n  var name = 'Animation' + animationIndex;\n  animationIndex += 1;\n\n  if (!isAnimationSupported) {\n    return name;\n  }\n\n  var rule = '@' + keyframesPrefixed + ' ' + name + ' {\\n' + Object.keys(keyframeRules).map(function (percentage) {\n    var props = keyframeRules[percentage];\n    var prefixedProps = Prefixer.getPrefixedStyle(props, 'css');\n    var serializedProps = createMarkupForStyles(prefixedProps, '  ');\n    return '  ' + percentage + ' {\\n  ' + serializedProps + '\\n  }';\n  }).join('\\n') + '\\n}\\n';\n\n  // for flow\n  /* istanbul ignore next */\n  if (!animationStyleSheet) {\n    throw new Error('keyframes not initialized properly');\n  }\n\n  animationStyleSheet.sheet.insertRule(rule, animationStyleSheet.sheet.cssRules.length);\n  return name;\n};\n\nmodule.exports = keyframes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/radium/lib/keyframes.js\n ** module id = 16\n ** module chunks = 0\n **/"],"sourceRoot":""}